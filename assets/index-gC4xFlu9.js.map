{"version":3,"file":"index-gC4xFlu9.js","sources":["../../src/Screens/Cards/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport { SharedElement } from '@react-motion-router/core';\r\nimport { Anchor, ScreenComponentProps } from '@react-motion-router/stack';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Hero, Heroes } from '../../assets/Heroes';\r\nimport ButtonBase from '@mui/material/ButtonBase';\r\nimport './index.css';\r\nimport { getInset } from '../../common/utils';\r\n\r\ninterface CardsProps extends ScreenComponentProps { }\r\n\r\ninterface CardListProps extends CardsProps {\r\n    observer: IntersectionObserver;\r\n}\r\n\r\ninterface CardProps extends CardsProps {\r\n    observer: IntersectionObserver;\r\n    hero: Hero;\r\n}\r\n\r\nlet imageInset = '';\r\nlet textInset = '';\r\nlet bgInset = '';\r\nlet heroName = '';\r\nlet titleInset = '';\r\nconst CardComponent = ({ observer, hero }: CardProps) => {\r\n    const bgRef = React.useRef<HTMLDivElement | null>(null);\r\n    const titleRef = React.useRef<HTMLHeadingElement | null>(null);\r\n    const paraRef = React.useRef<HTMLParagraphElement | null>(null);\r\n    const imageRef = React.useRef<HTMLImageElement | null>(null);\r\n\r\n    React.useEffect(() => {\r\n        if (imageRef.current) observer.observe(imageRef.current);\r\n        return () => {\r\n            if (imageRef.current) observer.unobserve(imageRef.current);\r\n        }\r\n    }, [imageRef, observer]);\r\n    const onClick = () => {\r\n        const image = imageRef.current;\r\n        const paragraph = paraRef.current;\r\n        const title = titleRef.current;\r\n        const bg = bgRef.current;\r\n        if (image && paragraph && title && bg) {\r\n            const imageRect = image.getBoundingClientRect();\r\n            const paraRect = paragraph.getBoundingClientRect();\r\n            const titleRect = title.getBoundingClientRect();\r\n            titleInset = getInset(-titleRect.top, -titleRect.right, -titleRect.bottom, -titleRect.left);\r\n            title.style.clipPath = titleInset;\r\n            imageInset = getInset(-imageRect.top, -imageRect.right, -imageRect.bottom, -imageRect.left);\r\n            image.style.clipPath = imageInset;\r\n            bgInset = getInset(-imageRect.top, -imageRect.right, -imageRect.bottom, -imageRect.left);\r\n            bg.style.clipPath = bgInset;\r\n            textInset = getInset(-paraRect.top, -paraRect.right, -paraRect.bottom, -paraRect.left);\r\n            paragraph.style.clipPath = textInset;\r\n            heroName = hero.id;\r\n        }\r\n    };\r\n    return (\r\n        <li role=\"menuitem\">\r\n            <Anchor href='details' query={{ ...hero }} onClick={onClick}>\r\n                <ButtonBase aria-label={`Character profile: ${hero.name}`} disableRipple>\r\n                    <SharedElement id={`${hero.id}-card-bg`} config={{deepClone: false}}>\r\n                        <div\r\n                            id={`${hero.id}-card-bg`}\r\n                            className=\"card-bg\"\r\n                            ref={bgRef}\r\n                            style={{ width: 345 > window.screen.width ? 300 : 345, clipPath: (heroName === hero.id ? bgInset : '') }}\r\n                        >\r\n                            <Card sx={{ width: 345 > window.screen.width ? 300 : 345 }}>\r\n                                <SharedElement id={hero.id}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        height=\"140\"\r\n                                        loading={heroName === hero.id ? \"eager\" : \"lazy\"}\r\n                                        decoding={heroName === hero.id ? \"sync\" : \"async\"}\r\n                                        src={hero.photoUrl}\r\n                                        alt={hero.name}\r\n                                        id={`${hero.id}`}\r\n                                        ref={imageRef}\r\n                                        style={{\r\n                                            clipPath: (heroName === hero.id ? imageInset : '')\r\n                                        }}\r\n                                    />\r\n                                </SharedElement>\r\n                                <CardContent>\r\n                                    <SharedElement id={`title-${hero.id}`}>\r\n                                        <Typography\r\n                                            style={{\r\n                                                clipPath: (heroName === hero.id ? titleInset : ''),\r\n                                                fontWeight: 'bold',\r\n                                                margin: 0,\r\n                                                fontSize: '28px'\r\n                                            }}\r\n                                            ref={titleRef}\r\n                                            gutterBottom\r\n                                            variant=\"h4\"\r\n                                            component=\"h4\"\r\n                                        >{hero.name}</Typography>\r\n                                    </SharedElement>\r\n                                    <SharedElement id={`description-${hero.id}`}>\r\n                                        <p\r\n                                            ref={paraRef}\r\n                                            style={{\r\n                                                fontSize: '16px',\r\n                                                clipPath: (heroName === hero.id ? textInset : '')\r\n                                            }}\r\n                                        >{hero.description}</p>\r\n                                    </SharedElement>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </div>\r\n                    </SharedElement>\r\n                </ButtonBase>\r\n            </Anchor>\r\n        </li>\r\n    );\r\n}\r\n\r\nconst CardList = (props: CardListProps) => {\r\n    const cards = Heroes.map((hero: Hero, index) => {\r\n        return (\r\n            <CardComponent key={index} hero={hero} {...props} />\r\n        );\r\n    });\r\n    return <>{cards}</>;\r\n}\r\n\r\n\r\nexport default class Cards extends React.Component<CardsProps> {\r\n    static isFirstLoad = false;\r\n    private ref: HTMLElement | null = null;\r\n    private observer = new IntersectionObserver(this.observe.bind(this), {\r\n        root: document.querySelector('.card-list')\r\n    });\r\n    private static scrollPos = {\r\n        x: 0,\r\n        y: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.navigation.transition?.finished.then(() => {\r\n            Cards.isFirstLoad = true;\r\n            if (this.props.navigation.current.url?.pathname === '/cards') {\r\n                imageInset = '';\r\n                textInset = '';\r\n                titleInset = '';\r\n            }\r\n            this.forceUpdate();\r\n        });\r\n        if (this.ref) {\r\n            this.ref.scrollTo(Cards.scrollPos.x, Cards.scrollPos.y); // scroll restoration\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.observer.disconnect();\r\n        if (this.ref) {\r\n            Cards.scrollPos = {\r\n                x: this.ref.scrollLeft,\r\n                y: this.ref.scrollTop\r\n            }\r\n        }\r\n    }\r\n\r\n    observe(entries: IntersectionObserverEntry[]) {\r\n        for (let entry of entries) {\r\n            const target = entry.target as HTMLImageElement;\r\n            if (entry.isIntersecting) {\r\n                target.loading = 'eager';\r\n                target.decoding = 'sync';\r\n            } else {\r\n                target.loading = 'lazy';\r\n                target.decoding = 'async';\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`cards ${Cards.isFirstLoad ? 'loaded' : 'suspense'}`}>\r\n                <ul role=\"group\" aria-label='One Punch Man Series Characters' className=\"card-list\" ref={(ref: HTMLElement | null) => this.ref = ref}>\r\n                    <CardList {...this.props} observer={this.observer} />\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}"],"names":["imageInset","textInset","bgInset","heroName","titleInset","CardComponent","observer","hero","bgRef","React","titleRef","paraRef","imageRef","onClick","image","paragraph","title","bg","imageRect","paraRect","titleRect","getInset","jsx","Anchor","ButtonBase","SharedElement","jsxs","Card","CardMedia","CardContent","Typography","CardList","props","cards","Heroes","index","Cards","entries","entry","target","ref"],"mappings":"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"}