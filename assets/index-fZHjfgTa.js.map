{"version":3,"mappings":"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","names":["isEvent","value","isLike","assertEvent","type","isParallelEvent","AbortError","message","isAbortError","error","InvalidStateError","isInvalidStateError","isAbortSignal","isAbortSignalLike","isSignalEvent","isSignalEventLike","isSignalHandled","event","EventTargetListeners","EventTargetListenersIgnore","EventTargetListenersMatch","EventTargetListenersThis","EventDescriptorSymbol","matchEventCallback","callback","options","optionsDescriptor","isOptionsDescriptor","descriptor","isFunctionEventCallback","fn","EventTargetDescriptors","EventTargetListenersSymbol","external","matched","listener","externalListeners","externalIndex","index","AsyncEventTarget","thisValue","listeners","parallel","promises","promise","rejected","result","unhandled","reason","defaultEventTargetModule","eventTargetModule","EventTargetImplementation","assertEventTarget","target","EventTarget","args","dispatchEvent","isInterceptEvent","isInterceptEventLike","NavigationEventTarget","assertEventCallback","fakeUUID","getImportUUIDOrNodeRandomUUID","v4","__vitePreload","crypto","mod","uuidModule","getUuidModule","NavigationGetState","NavigationHistoryEntryNavigationType","NavigationHistoryEntryKnownAs","NavigationHistoryEntrySetState","isPrimitiveValue","state","isValue","NavigationHistoryEntry","#index","#state","#options","set","init","deferred","handleCatch","resolve","reject","resolveFn","rejectFn","ok","GlobalAbortController","AbortController","isPromise","like","isPromiseRejectedResult","Rollback","Unset","NavigationTransitionParentEventTarget","NavigationTransitionFinishedDeferred","NavigationTransitionCommittedDeferred","NavigationTransitionNavigationType","NavigationTransitionInitialEntries","NavigationTransitionFinishedEntries","NavigationTransitionInitialIndex","NavigationTransitionFinishedIndex","NavigationTransitionEntry","NavigationTransitionIsCommitted","NavigationTransitionIsFinished","NavigationTransitionIsRejected","NavigationTransitionKnown","NavigationTransitionPromises","NavigationIntercept","NavigationTransitionIsOngoing","NavigationTransitionIsPending","NavigationTransitionIsAsync","NavigationTransitionWait","NavigationTransitionPromiseResolved","NavigationTransitionRejected","NavigationTransitionCommit","NavigationTransitionFinish","NavigationTransitionStart","NavigationTransitionStartDeadline","NavigationTransitionError","NavigationTransitionFinally","NavigationTransitionAbort","NavigationTransitionInterceptOptionsCommit","NavigationTransitionCommitIsManual","NavigationTransition","#promises","#rolledBack","#abortController","finished","committed","known","entry","#onCommitPromise","#onFinishPromise","#onCommitSetProperty","#onFinishSetProperty","#onError","navigationType","transition","parseOptions","statusPromise","handler","commit","captured","getWindowBaseURL","getBaseURL","url","baseURL","defer","settled","status","NavigationCurrentEntryChangeEvent","NavigateEvent","NavigationFormData","NavigationDownloadRequest","NavigationCanIntercept","NavigationUserInitiated","NavigationOriginalEvent","noop","getEntryIndex","entries","knownIndex","createNavigationTransition","context","transitionCommit","currentIndex","initialKnown","currentEntry","previousEntries","intercept","reportError","resolvedEntries","destinationIndex","nextIndex","destination","hashChange","currentUrlInstance","destinationUrlInstance","currentHash","destinationHash","currentUrlInstanceWithoutHash","destinationUrlInstanceWithoutHash","contextToCommit","resolveCommit","waitForCommit","abortController","originalEvent","preventDefault","definedEvent","currentEntryChange","updatedEntries","removedEntries","addedEntries","previousKeys","keys","removed","entriesChange","createEvent","detail","rest","customEvent","NavigationSetOptions","NavigationSetEntries","NavigationSetCurrentIndex","NavigationSetCurrentKey","NavigationSetState","NavigationDisposeState","isNavigationNavigationType","Navigation","#transitionInProgressCount","#entries","#known","#currentIndex","#activeTransition","#knownTransitions","#baseURL","#initialEntry","key","sameDocument","#pushEntry","#cloneNavigationHistoryEntry","found","#isSameDocument","isSameOrigins","a","b","currentEntryUrl","nextUrl","#createNavigationHistoryEntry","existing","#commitTransition","givenNavigationType","nextTransition","#rollback","#immediateTransition","#queueTransition","#transition","rollbackTransition","previousIndex","previousCurrent","nextOptions","resolvedNavigationType","resolvedEntry","performance","getPerformance","currentEntryChangeEvent","committedCurrentEntryChange","startEventPromise","syncCommit","asyncCommit","unsetTransition","previous","completeTransition","transitionResult","microtask","iterator","transitionSteps","iterable","syncTransition","asyncTransition","dispose","#dispose","navigate","navigateAbort","maybeSyncTransition","AppLocationCheckChange","AppLocationAwaitFinished","AppLocationTransitionURL","AppLocationUrl","NAVIGATION_LOCATION_DEFAULT_URL","NavigationLocation","#navigation","reset","#transitioningURL","isCommittedAvailable","#urls","next","#setUrlValue","currentUrlString","nextUrlString","#transitionURL","#awaitFinished","instance","#triggerIfUrlChanged","current","currentUrl","expectedUrl","State","NavigationHistory","currentState","delta","nextEntry","nextEntryKey","data","unused","NavigationSync","navigation","finalPromise","structuredClone","getStructuredCloneModule","structuredCloneFallback","getStructuredClone","stringify","parse","globalWindow","globalSelf","NavigationKey","NavigationMeta","getWindowHistory","givenWindow","isStateHistoryMeta","isStateHistoryWithMeta","disposeHistoryState","persist","getEntries","limit","DEFAULT_POLYFILL_OPTIONS","id","getNavigationEntryMeta","getNavigationEntryWithMeta","setHistoryState","history","setStateInSession","getSerializableState","raw","getHistoryState","getStateFromHistoryIfMatchingKey","getStateFromSession","getStateFromHistoryDirectly","getBaseState","getPolyfill","getCompletePolyfill","isNavigationPolyfill","getNavigationOnlyPolyfill","givenNavigation","NavigationPolyfill","interceptWindowClicks","window","clickCallback","ev","aEl","process","isAppNavigation","submitCallback","form","method","action","formData","params","k","v","navFormData","unknownEvent","getAnchorFromEvent","getFormFromEvent","matchesAncestor","getComposedPathTarget","patchGlobalScope","patchGlobals","patchPopState","patchHistory","patchWindow","polyfillHistory","pushState","replaceState","go","back","forward","prototype","stateDescriptor","popStateEventPrototype","original","PERSIST_ENTRIES","PERSIST_ENTRIES_STATE","givenHistory","patchLimit","PATCH_HISTORY","INTERCEPT_EVENTS","IS_PERSIST","historyInitialState","initialMeta","initialEntries","HISTORY_INTEGRATION","navigationOptions","historyGo","ignorePopState","ignoreCurrentEntryChange","submit","anchor","submitAnchor","submitForm","element","cloned","from","historyState","originalState","foundState","evt","givenElement","selector","getDefaultElement","assertNavigation","applyPolyfill","apply"],"sources":["../../../node_modules/@virtualstate/navigation/esnext/event-target/event.js","../../../node_modules/@virtualstate/navigation/esnext/event-target/parallel-event.js","../../../node_modules/@virtualstate/navigation/esnext/navigation-errors.js","../../../node_modules/@virtualstate/navigation/esnext/event-target/signal-event.js","../../../node_modules/@virtualstate/navigation/esnext/event-target/event-target-options.js","../../../node_modules/@virtualstate/navigation/esnext/event-target/descriptor.js","../../../node_modules/@virtualstate/navigation/esnext/event-target/callback.js","../../../node_modules/@virtualstate/navigation/esnext/event-target/event-target-listeners.js","../../../node_modules/@virtualstate/navigation/esnext/event-target/async-event-target.js","../../../node_modules/@virtualstate/navigation/esnext/event-target/event-target.js","../../../node_modules/@virtualstate/navigation/esnext/event-target/intercept-event.js","../../../node_modules/@virtualstate/navigation/esnext/navigation-event-target.js","../../../node_modules/@virtualstate/navigation/esnext/util/uuid-or-random.js","../../../node_modules/@virtualstate/navigation/esnext/navigation-entry.js","../../../node_modules/@virtualstate/navigation/esnext/util/deferred.js","../../../node_modules/@virtualstate/navigation/esnext/global-abort-controller.js","../../../node_modules/@virtualstate/navigation/esnext/import-abort-controller.js","../../../node_modules/@virtualstate/navigation/esnext/is.js","../../../node_modules/@virtualstate/navigation/esnext/navigation-transition.js","../../../node_modules/@virtualstate/navigation/esnext/base-url.js","../../../node_modules/@virtualstate/navigation/esnext/defer.js","../../../node_modules/@virtualstate/navigation/esnext/events/navigation-current-entry-change-event.js","../../../node_modules/@virtualstate/navigation/esnext/events/navigate-event.js","../../../node_modules/@virtualstate/navigation/esnext/create-navigation-transition.js","../../../node_modules/@virtualstate/navigation/esnext/event-target/create-event.js","../../../node_modules/@virtualstate/navigation/esnext/navigation.js","../../../node_modules/@virtualstate/navigation/esnext/location.js","../../../node_modules/@virtualstate/navigation/esnext/history.js","../../../node_modules/@virtualstate/navigation/esnext/transition.js","../../../node_modules/@virtualstate/navigation/esnext/util/structured-json.js","../../../node_modules/@virtualstate/navigation/esnext/global-window.js","../../../node_modules/@virtualstate/navigation/esnext/global-self.js","../../../node_modules/@virtualstate/navigation/esnext/get-polyfill.js","../../../node_modules/@virtualstate/navigation/esnext/global-navigation.js","../../../node_modules/@virtualstate/navigation/esnext/apply-polyfill.js"],"sourcesContent":["export function isEvent(value) {\n    function isLike(value) {\n        return !!value;\n    }\n    return (isLike(value) &&\n        (typeof value.type === \"string\" || typeof value.type === \"symbol\"));\n}\nexport function assertEvent(value, type) {\n    if (!isEvent(value)) {\n        throw new Error(\"Expected event\");\n    }\n    if (typeof type !== \"undefined\" && value.type !== type) {\n        throw new Error(`Expected event type ${String(type)}, got ${value.type.toString()}`);\n    }\n}\n//# sourceMappingURL=event.js.map","import { isEvent } from \"./event.js\";\nexport function isParallelEvent(value) {\n    return isEvent(value) && value.parallel !== false;\n}\n//# sourceMappingURL=parallel-event.js.map","export class AbortError extends Error {\n    constructor(message) {\n        super(`AbortError${message ? `: ${message}` : \"\"}`);\n        this.name = \"AbortError\";\n    }\n}\nexport function isAbortError(error) {\n    return error instanceof Error && error.name === \"AbortError\";\n}\nexport class InvalidStateError extends Error {\n    constructor(message) {\n        super(`InvalidStateError${message ? `: ${message}` : \"\"}`);\n        this.name = \"InvalidStateError\";\n    }\n}\nexport function isInvalidStateError(error) {\n    return error instanceof Error && error.name === \"InvalidStateError\";\n}\n//# sourceMappingURL=navigation-errors.js.map","import { isEvent } from \"./event.js\";\nimport { isAbortError } from \"../navigation-errors.js\";\nexport function isAbortSignal(value) {\n    function isAbortSignalLike(value) {\n        return typeof value === \"object\";\n    }\n    return (isAbortSignalLike(value) &&\n        typeof value.aborted === \"boolean\" &&\n        typeof value.addEventListener === \"function\");\n}\nexport function isAbortController(value) {\n    function isAbortControllerLike(value) {\n        return typeof value === \"object\";\n    }\n    return (isAbortControllerLike(value) &&\n        typeof value.abort === \"function\" &&\n        isAbortSignal(value.signal));\n}\nexport function isSignalEvent(value) {\n    function isSignalEventLike(value) {\n        return value.hasOwnProperty(\"signal\");\n    }\n    return (isEvent(value) && isSignalEventLike(value) && isAbortSignal(value.signal));\n}\nexport function isSignalHandled(event, error) {\n    if (isSignalEvent(event) &&\n        event.signal.aborted &&\n        error instanceof Error &&\n        isAbortError(error)) {\n        return true;\n    }\n}\n//# sourceMappingURL=signal-event.js.map","/**\n * @experimental\n */\nexport const EventTargetListeners = Symbol.for(\"@opennetwork/environment/events/target/listeners\");\n/**\n * @experimental\n */\nexport const EventTargetListenersIgnore = Symbol.for(\"@opennetwork/environment/events/target/listeners/ignore\");\n/**\n * @experimental\n */\nexport const EventTargetListenersMatch = Symbol.for(\"@opennetwork/environment/events/target/listeners/match\");\n/**\n * @experimental\n */\nexport const EventTargetListenersThis = Symbol.for(\"@opennetwork/environment/events/target/listeners/this\");\n//# sourceMappingURL=event-target-options.js.map","export const EventDescriptorSymbol = Symbol.for(\"@opennetwork/environment/events/descriptor\");\n//# sourceMappingURL=descriptor.js.map","import { EventDescriptorSymbol } from \"./descriptor.js\";\nexport function matchEventCallback(type, callback, options) {\n    const optionsDescriptor = isOptionsDescriptor(options) ? options : undefined;\n    return (descriptor) => {\n        if (optionsDescriptor) {\n            return optionsDescriptor === descriptor;\n        }\n        return ((!callback || callback === descriptor.callback) &&\n            type === descriptor.type);\n    };\n    function isOptionsDescriptor(options) {\n        function isLike(options) {\n            return !!options;\n        }\n        return isLike(options) && options[EventDescriptorSymbol] === true;\n    }\n}\n//# sourceMappingURL=callback.js.map","import { EventDescriptorSymbol } from \"./descriptor.js\";\nimport { matchEventCallback } from \"./callback.js\";\nimport { isSignalEvent } from \"./signal-event.js\";\nimport { isAbortError } from \"../navigation-errors.js\";\nimport { EventTargetListeners as EventTargetListenersSymbol, EventTargetListenersIgnore, EventTargetListenersMatch, } from \"./event-target-options.js\";\nfunction isFunctionEventCallback(fn) {\n    return typeof fn === \"function\";\n}\nconst EventTargetDescriptors = Symbol.for(\"@virtualstate/navigation/event-target/descriptors\");\nexport class EventTargetListeners {\n    [EventTargetDescriptors] = [];\n    [EventTargetListenersIgnore] = new WeakSet();\n    get [EventTargetListenersSymbol]() {\n        return [...(this[EventTargetDescriptors] ?? [])];\n    }\n    [EventTargetListenersMatch](type) {\n        const external = this[EventTargetListenersSymbol];\n        const matched = [\n            ...new Set([...(external ?? []), ...(this[EventTargetDescriptors] ?? [])]),\n        ]\n            .filter((descriptor) => descriptor.type === type || descriptor.type === \"*\")\n            .filter((descriptor) => !this[EventTargetListenersIgnore]?.has(descriptor));\n        const listener = typeof type === \"string\" ? this[`on${type}`] : undefined;\n        if (typeof listener === \"function\" && isFunctionEventCallback(listener)) {\n            matched.push({\n                type,\n                callback: listener,\n                [EventDescriptorSymbol]: true,\n            });\n        }\n        return matched;\n    }\n    addEventListener(type, callback, options) {\n        const listener = {\n            ...options,\n            isListening: () => !!this[EventTargetDescriptors]?.find(matchEventCallback(type, callback)),\n            descriptor: {\n                [EventDescriptorSymbol]: true,\n                ...options,\n                type,\n                callback,\n            },\n            timestamp: Date.now(),\n        };\n        if (listener.isListening()) {\n            return;\n        }\n        this[EventTargetDescriptors]?.push(listener.descriptor);\n    }\n    removeEventListener(type, callback, options) {\n        if (!isFunctionEventCallback(callback)) {\n            return;\n        }\n        const externalListeners = this[EventTargetListenersSymbol] ?? this[EventTargetDescriptors] ?? [];\n        const externalIndex = externalListeners.findIndex(matchEventCallback(type, callback, options));\n        if (externalIndex === -1) {\n            return;\n        }\n        const index = this[EventTargetDescriptors]?.findIndex(matchEventCallback(type, callback, options)) ??\n            -1;\n        if (index !== -1) {\n            this[EventTargetDescriptors]?.splice(index, 1);\n        }\n        const descriptor = externalListeners[externalIndex];\n        if (descriptor) {\n            this[EventTargetListenersIgnore]?.add(descriptor);\n        }\n    }\n    hasEventListener(type, callback) {\n        if (callback && !isFunctionEventCallback(callback)) {\n            return false;\n        }\n        const foundIndex = this[EventTargetDescriptors]?.findIndex(matchEventCallback(type, callback)) ?? -1;\n        return foundIndex > -1;\n    }\n}\nexport function isSignalHandled(event, error) {\n    if (isSignalEvent(event) &&\n        event.signal.aborted &&\n        error instanceof Error &&\n        isAbortError(error)) {\n        return true;\n    }\n}\n//# sourceMappingURL=event-target-listeners.js.map","import { isParallelEvent } from \"./parallel-event.js\";\nimport { isSignalEvent, isSignalHandled } from \"./signal-event.js\";\nimport { AbortError } from \"../navigation-errors.js\";\nimport { EventTargetListenersMatch, EventTargetListenersThis, } from \"./event-target-options.js\";\nimport { EventTargetListeners } from \"./event-target-listeners.js\";\nexport class AsyncEventTarget extends EventTargetListeners {\n    [EventTargetListenersThis];\n    constructor(thisValue = undefined) {\n        super();\n        this[EventTargetListenersThis] = thisValue;\n    }\n    async dispatchEvent(event) {\n        const listeners = this[EventTargetListenersMatch]?.(event.type) ?? [];\n        // Don't even dispatch an aborted event\n        if (isSignalEvent(event) && event.signal.aborted) {\n            throw new AbortError();\n        }\n        const parallel = isParallelEvent(event);\n        const promises = [];\n        for (let index = 0; index < listeners.length; index += 1) {\n            const descriptor = listeners[index];\n            const promise = (async () => {\n                // Remove the listener before invoking the callback\n                // This ensures that inside of the callback causes no more additional event triggers to this\n                // listener\n                if (descriptor.once) {\n                    // by passing the descriptor as the options, we get an internal redirect\n                    // that forces an instance level object equals, meaning\n                    // we will only remove _this_ descriptor!\n                    this.removeEventListener(descriptor.type, descriptor.callback, descriptor);\n                }\n                await descriptor.callback.call(this[EventTargetListenersThis] ?? this, event);\n            })();\n            if (!parallel) {\n                try {\n                    await promise;\n                }\n                catch (error) {\n                    if (!isSignalHandled(event, error)) {\n                        await Promise.reject(error);\n                    }\n                }\n                if (isSignalEvent(event) && event.signal.aborted) {\n                    // bye\n                    return;\n                }\n            }\n            else {\n                promises.push(promise);\n            }\n        }\n        if (promises.length) {\n            // Allows for all promises to settle finish so we can stay within the event, we then\n            // will utilise Promise.all which will reject with the first rejected promise\n            const results = await Promise.allSettled(promises);\n            const rejected = results.filter((result) => {\n                return result.status === \"rejected\";\n            });\n            if (rejected.length) {\n                let unhandled = rejected;\n                // If the event was aborted, then allow abort errors to occur, and handle these as handled errors\n                // The dispatcher does not care about this because they requested it\n                //\n                // There may be other unhandled errors that are more pressing to the task they are doing.\n                //\n                // The dispatcher can throw an abort error if they need to throw it up the chain\n                if (isSignalEvent(event) && event.signal.aborted) {\n                    unhandled = unhandled.filter((result) => !isSignalHandled(event, result.reason));\n                }\n                if (unhandled.length === 1) {\n                    await Promise.reject(unhandled[0].reason);\n                    throw unhandled[0].reason; // We shouldn't get here\n                }\n                else if (unhandled.length > 1) {\n                    throw new AggregateError(unhandled.map(({ reason }) => reason));\n                }\n            }\n        }\n    }\n}\n//# sourceMappingURL=async-event-target.js.map","import { AsyncEventTarget } from \"./async-event-target.js\";\nconst defaultEventTargetModule = {\n    EventTarget: AsyncEventTarget,\n    AsyncEventTarget,\n    SyncEventTarget: AsyncEventTarget,\n};\nlet eventTargetModule = defaultEventTargetModule;\n//\n// try {\n//     eventTargetModule = await import(\"@virtualstate/navigation/event-target\");\n//     console.log(\"Using @virtualstate/navigation/event-target\", eventTargetModule);\n// } catch {\n//     console.log(\"Using defaultEventTargetModule\");\n//     eventTargetModule = defaultEventTargetModule;\n// }\nconst EventTargetImplementation = eventTargetModule.EventTarget || eventTargetModule.SyncEventTarget || eventTargetModule.AsyncEventTarget;\nfunction assertEventTarget(target) {\n    if (typeof target !== \"function\") {\n        throw new Error(\"Could not load EventTarget implementation\");\n    }\n}\nexport class EventTarget extends AsyncEventTarget {\n    constructor(...args) {\n        super();\n        if (EventTargetImplementation) {\n            assertEventTarget(EventTargetImplementation);\n            const { dispatchEvent } = new EventTargetImplementation(...args);\n            this.dispatchEvent = dispatchEvent;\n        }\n    }\n}\n//# sourceMappingURL=event-target.js.map","import { isEvent } from \"./event.js\";\nexport function isInterceptEvent(value) {\n    function isInterceptEventLike(value) {\n        return isEvent(value);\n    }\n    return (isInterceptEventLike(value) && typeof value.intercept === \"function\");\n}\n//# sourceMappingURL=intercept-event.js.map","import { EventTarget, } from \"./event-target/index.js\";\nexport class NavigationEventTarget extends EventTarget {\n    addEventListener(type, listener, options) {\n        assertEventCallback(listener);\n        return super.addEventListener(type, listener, typeof options === \"boolean\" ? { once: options } : options);\n        function assertEventCallback(listener) {\n            if (typeof listener !== \"function\")\n                throw new Error(\"Please us the function variant of event listener\");\n        }\n    }\n    removeEventListener(type, listener, options) {\n        assertEventCallback(listener);\n        return super.removeEventListener(type, listener);\n        function assertEventCallback(listener) {\n            if (typeof listener !== \"function\")\n                throw new Error(\"Please us the function variant of event listener\");\n        }\n    }\n}\n//# sourceMappingURL=navigation-event-target.js.map","const fakeUUID = {\n    v4() {\n        return Array\n            .from({ length: 5 }, () => `${Math.random()}`.replace(/^0\\./, \"\"))\n            .join(\"-\")\n            .replace(\".\", \"\");\n    },\n};\nasync function getImportUUIDOrNodeRandomUUID() {\n    const { v4 } = await import(\"./import-uuid.js\")\n        .catch(async () => {\n        // @ts-ignore\n        const crypto = await import(\"node:crypto\");\n        return {\n            v4() {\n                return crypto.randomUUID();\n            }\n        };\n    })\n        .catch(async () => import(\"uuid\"))\n        .catch(() => undefined)\n        .then((mod) => mod ?? fakeUUID);\n    return { v4 };\n}\n/** post rollup replace importUuid **/\nconst uuidModule = (await getImportUUIDOrNodeRandomUUID());\nconst getUuidModule = () => uuidModule;\n/** post rollup replace importUuid **/\nexport function v4() {\n    const uuidModule = getUuidModule();\n    if (!(uuidModule?.v4))\n        return fakeUUID.v4();\n    return uuidModule.v4();\n}\n//# sourceMappingURL=uuid-or-random.js.map","import { NavigationEventTarget } from \"./navigation-event-target.js\";\nimport { EventTargetListeners } from \"./event-target/index.js\";\nimport { v4 } from \"./util/uuid-or-random.js\";\n// To prevent cyclic imports, where a circular is used, instead use the prototype interface\n// and then copy over the \"private\" symbol\nconst NavigationGetState = Symbol.for(\"@virtualstate/navigation/getState\");\nexport const NavigationHistoryEntryNavigationType = Symbol.for(\"@virtualstate/navigation/entry/navigationType\");\nexport const NavigationHistoryEntryKnownAs = Symbol.for(\"@virtualstate/navigation/entry/knownAs\");\nexport const NavigationHistoryEntrySetState = Symbol.for(\"@virtualstate/navigation/entry/setState\");\nfunction isPrimitiveValue(state) {\n    return (typeof state === \"number\" ||\n        typeof state === \"boolean\" ||\n        typeof state === \"symbol\" ||\n        typeof state === \"bigint\" ||\n        typeof state === \"string\");\n}\nfunction isValue(state) {\n    return !!(state || isPrimitiveValue(state));\n}\nexport class NavigationHistoryEntry extends NavigationEventTarget {\n    #index;\n    #state;\n    get index() {\n        return typeof this.#index === \"number\" ? this.#index : this.#index();\n    }\n    key;\n    id;\n    url;\n    sameDocument;\n    get [NavigationHistoryEntryNavigationType]() {\n        return this.#options.navigationType;\n    }\n    get [NavigationHistoryEntryKnownAs]() {\n        const set = new Set(this.#options[NavigationHistoryEntryKnownAs]);\n        set.add(this.id);\n        return set;\n    }\n    #options;\n    get [EventTargetListeners]() {\n        return [\n            ...(super[EventTargetListeners] ?? []),\n            ...(this.#options[EventTargetListeners] ?? []),\n        ];\n    }\n    constructor(init) {\n        super();\n        this.#options = init;\n        this.key = init.key || v4();\n        this.id = v4();\n        this.url = init.url ?? undefined;\n        this.#index = init.index;\n        this.sameDocument = init.sameDocument ?? true;\n        this.#state = init.state ?? undefined;\n    }\n    [NavigationGetState]() {\n        return this.#options?.getState?.(this);\n    }\n    getState() {\n        let state = this.#state;\n        if (!isValue(state)) {\n            const external = this[NavigationGetState]();\n            if (isValue(external)) {\n                state = this.#state = external;\n            }\n        }\n        /**\n         * https://github.com/WICG/app-history/blob/7c0332b30746b14863f717404402bc49e497a2b2/spec.bs#L1406\n         * Note that in general, unless the state value is a primitive, entry.getState() !== entry.getState(), since a fresh copy is returned each time.\n         */\n        if (typeof state === \"undefined\" ||\n            isPrimitiveValue(state)) {\n            return state;\n        }\n        if (typeof state === \"function\") {\n            console.warn(\"State passed to Navigation.navigate was a function, this may be unintentional\");\n            console.warn(\"Unless a state value is primitive, with a standard implementation of Navigation\");\n            console.warn(\"your state value will be serialized and deserialized before this point, meaning\");\n            console.warn(\"a function would not be usable.\");\n        }\n        return {\n            ...state,\n        };\n    }\n    [NavigationHistoryEntrySetState](state) {\n        this.#state = state;\n    }\n}\n//# sourceMappingURL=navigation-entry.js.map","/**\n * @param handleCatch rejected promises automatically to allow free usage\n */\nexport function deferred(handleCatch) {\n    let resolve = undefined, reject = undefined;\n    const promise = new Promise((resolveFn, rejectFn) => {\n        resolve = resolveFn;\n        reject = rejectFn;\n    });\n    ok(resolve);\n    ok(reject);\n    return {\n        resolve,\n        reject,\n        promise: handleCatch ? promise.catch(handleCatch) : promise,\n    };\n}\nfunction ok(value) {\n    if (!value) {\n        throw new Error(\"Value not provided\");\n    }\n}\n//# sourceMappingURL=deferred.js.map","export const GlobalAbortController = typeof AbortController !== \"undefined\" ? AbortController : undefined;\n//# sourceMappingURL=global-abort-controller.js.map","import { GlobalAbortController } from \"./global-abort-controller.js\";\nif (!GlobalAbortController) {\n    throw new Error(\"AbortController expected to be available or polyfilled\");\n}\nexport const AbortController = GlobalAbortController;\n//# sourceMappingURL=import-abort-controller.js.map","export function isPromise(value) {\n    return (like(value) &&\n        typeof value.then === \"function\");\n}\nexport function ok(value, message = \"Expected value\") {\n    if (!value) {\n        throw new Error(message);\n    }\n}\nexport function isPromiseRejectedResult(value) {\n    return value.status === \"rejected\";\n}\nexport function like(value) {\n    return !!value;\n}\n//# sourceMappingURL=is.js.map","import { deferred } from \"./util/deferred.js\";\nimport { AbortError, InvalidStateError, isAbortError, isInvalidStateError, } from \"./navigation-errors.js\";\nimport { EventTarget } from \"./event-target/index.js\";\nimport { AbortController } from \"./import-abort-controller.js\";\nimport { isPromise } from \"./is.js\";\nexport const Rollback = Symbol.for(\"@virtualstate/navigation/rollback\");\nexport const Unset = Symbol.for(\"@virtualstate/navigation/unset\");\nexport const NavigationTransitionParentEventTarget = Symbol.for(\"@virtualstate/navigation/transition/parentEventTarget\");\nexport const NavigationTransitionFinishedDeferred = Symbol.for(\"@virtualstate/navigation/transition/deferred/finished\");\nexport const NavigationTransitionCommittedDeferred = Symbol.for(\"@virtualstate/navigation/transition/deferred/committed\");\nexport const NavigationTransitionNavigationType = Symbol.for(\"@virtualstate/navigation/transition/navigationType\");\nexport const NavigationTransitionInitialEntries = Symbol.for(\"@virtualstate/navigation/transition/entries/initial\");\nexport const NavigationTransitionFinishedEntries = Symbol.for(\"@virtualstate/navigation/transition/entries/finished\");\nexport const NavigationTransitionInitialIndex = Symbol.for(\"@virtualstate/navigation/transition/index/initial\");\nexport const NavigationTransitionFinishedIndex = Symbol.for(\"@virtualstate/navigation/transition/index/finished\");\nexport const NavigationTransitionEntry = Symbol.for(\"@virtualstate/navigation/transition/entry\");\nexport const NavigationTransitionIsCommitted = Symbol.for(\"@virtualstate/navigation/transition/isCommitted\");\nexport const NavigationTransitionIsFinished = Symbol.for(\"@virtualstate/navigation/transition/isFinished\");\nexport const NavigationTransitionIsRejected = Symbol.for(\"@virtualstate/navigation/transition/isRejected\");\nexport const NavigationTransitionKnown = Symbol.for(\"@virtualstate/navigation/transition/known\");\nexport const NavigationTransitionPromises = Symbol.for(\"@virtualstate/navigation/transition/promises\");\nexport const NavigationIntercept = Symbol.for(\"@virtualstate/navigation/intercept\");\nexport const NavigationTransitionIsOngoing = Symbol.for(\"@virtualstate/navigation/transition/isOngoing\");\nexport const NavigationTransitionIsPending = Symbol.for(\"@virtualstate/navigation/transition/isPending\");\nexport const NavigationTransitionIsAsync = Symbol.for(\"@virtualstate/navigation/transition/isAsync\");\nexport const NavigationTransitionWait = Symbol.for(\"@virtualstate/navigation/transition/wait\");\nexport const NavigationTransitionPromiseResolved = Symbol.for(\"@virtualstate/navigation/transition/promise/resolved\");\nexport const NavigationTransitionRejected = Symbol.for(\"@virtualstate/navigation/transition/rejected\");\nexport const NavigationTransitionCommit = Symbol.for(\"@virtualstate/navigation/transition/commit\");\nexport const NavigationTransitionFinish = Symbol.for(\"@virtualstate/navigation/transition/finish\");\nexport const NavigationTransitionStart = Symbol.for(\"@virtualstate/navigation/transition/start\");\nexport const NavigationTransitionStartDeadline = Symbol.for(\"@virtualstate/navigation/transition/start/deadline\");\nexport const NavigationTransitionError = Symbol.for(\"@virtualstate/navigation/transition/error\");\nexport const NavigationTransitionFinally = Symbol.for(\"@virtualstate/navigation/transition/finally\");\nexport const NavigationTransitionAbort = Symbol.for(\"@virtualstate/navigation/transition/abort\");\nexport const NavigationTransitionInterceptOptionsCommit = Symbol.for(\"@virtualstate/navigation/transition/intercept/options/commit\");\nexport const NavigationTransitionCommitIsManual = Symbol.for(\"@virtualstate/navigation/transition/commit/isManual\");\nexport class NavigationTransition extends EventTarget {\n    finished;\n    /**\n     * @experimental\n     */\n    committed;\n    from;\n    navigationType;\n    /**\n     * true if transition has an async intercept\n     */\n    [NavigationTransitionIsAsync] = false;\n    /**\n     * @experimental\n     */\n    [NavigationTransitionInterceptOptionsCommit];\n    #options;\n    [NavigationTransitionFinishedDeferred] = deferred();\n    [NavigationTransitionCommittedDeferred] = deferred();\n    get [NavigationTransitionIsPending]() {\n        return !!this.#promises.size;\n    }\n    get [NavigationTransitionNavigationType]() {\n        return this.#options[NavigationTransitionNavigationType];\n    }\n    get [NavigationTransitionInitialEntries]() {\n        return this.#options[NavigationTransitionInitialEntries];\n    }\n    get [NavigationTransitionInitialIndex]() {\n        return this.#options[NavigationTransitionInitialIndex];\n    }\n    get [NavigationTransitionCommitIsManual]() {\n        return !!(this[NavigationTransitionInterceptOptionsCommit]?.includes(\"after-transition\") ||\n            this[NavigationTransitionInterceptOptionsCommit]?.includes(\"manual\"));\n    }\n    [NavigationTransitionFinishedEntries];\n    [NavigationTransitionFinishedIndex];\n    [NavigationTransitionIsCommitted] = false;\n    [NavigationTransitionIsFinished] = false;\n    [NavigationTransitionIsRejected] = false;\n    [NavigationTransitionIsOngoing] = false;\n    [NavigationTransitionKnown] = new Set();\n    [NavigationTransitionEntry];\n    #promises = new Set();\n    #rolledBack = false;\n    #abortController = new AbortController();\n    get signal() {\n        return this.#abortController.signal;\n    }\n    get [NavigationTransitionPromises]() {\n        return this.#promises;\n    }\n    constructor(init) {\n        super();\n        this[NavigationTransitionInterceptOptionsCommit] = [];\n        this[NavigationTransitionFinishedDeferred] =\n            init[NavigationTransitionFinishedDeferred] ??\n                this[NavigationTransitionFinishedDeferred];\n        this[NavigationTransitionCommittedDeferred] =\n            init[NavigationTransitionCommittedDeferred] ??\n                this[NavigationTransitionCommittedDeferred];\n        this.#options = init;\n        const finished = (this.finished =\n            this[NavigationTransitionFinishedDeferred].promise);\n        const committed = (this.committed =\n            this[NavigationTransitionCommittedDeferred].promise);\n        // Auto catching abort\n        void finished.catch((error) => error);\n        void committed.catch((error) => error);\n        this.from = init.from;\n        this.navigationType = init.navigationType;\n        this[NavigationTransitionFinishedEntries] =\n            init[NavigationTransitionFinishedEntries];\n        this[NavigationTransitionFinishedIndex] =\n            init[NavigationTransitionFinishedIndex];\n        const known = init[NavigationTransitionKnown];\n        if (known) {\n            for (const entry of known) {\n                this[NavigationTransitionKnown].add(entry);\n            }\n        }\n        this[NavigationTransitionEntry] = init[NavigationTransitionEntry];\n        // Event listeners\n        {\n            // Events to promises\n            {\n                this.addEventListener(NavigationTransitionCommit, this.#onCommitPromise, { once: true });\n                this.addEventListener(NavigationTransitionFinish, this.#onFinishPromise, { once: true });\n            }\n            // Events to property setters\n            {\n                this.addEventListener(NavigationTransitionCommit, this.#onCommitSetProperty, { once: true });\n                this.addEventListener(NavigationTransitionFinish, this.#onFinishSetProperty, { once: true });\n            }\n            // Rejection + Abort\n            {\n                this.addEventListener(NavigationTransitionError, this.#onError, {\n                    once: true,\n                });\n                this.addEventListener(NavigationTransitionAbort, () => {\n                    if (!this[NavigationTransitionIsFinished]) {\n                        return this[NavigationTransitionRejected](new AbortError());\n                    }\n                });\n            }\n            // Proxy all events from this transition onto entry + the parent event target\n            //\n            // The parent could be another transition, or the Navigation, this allows us to\n            // \"bubble up\" events layer by layer\n            //\n            // In this implementation, this allows individual transitions to \"intercept\" navigate and break the child\n            // transition from happening\n            //\n            // TODO WARN this may not be desired behaviour vs standard spec'd Navigation\n            {\n                this.addEventListener(\"*\", this[NavigationTransitionEntry].dispatchEvent.bind(this[NavigationTransitionEntry]));\n                this.addEventListener(\"*\", init[NavigationTransitionParentEventTarget].dispatchEvent.bind(init[NavigationTransitionParentEventTarget]));\n            }\n        }\n    }\n    rollback = (options) => {\n        // console.log({ rolled: this.#rolledBack });\n        if (this.#rolledBack) {\n            // TODO\n            throw new InvalidStateError(\"Rollback invoked multiple times: Please raise an issue at https://github.com/virtualstate/navigation with the use case where you want to use a rollback multiple times, this may have been unexpected behaviour\");\n        }\n        this.#rolledBack = true;\n        return this.#options.rollback(options);\n    };\n    #onCommitSetProperty = () => {\n        this[NavigationTransitionIsCommitted] = true;\n    };\n    #onFinishSetProperty = () => {\n        this[NavigationTransitionIsFinished] = true;\n    };\n    #onFinishPromise = () => {\n        // console.log(\"onFinishPromise\")\n        this[NavigationTransitionFinishedDeferred].resolve(this[NavigationTransitionEntry]);\n    };\n    #onCommitPromise = () => {\n        if (this.signal.aborted) {\n        }\n        else {\n            this[NavigationTransitionCommittedDeferred].resolve(this[NavigationTransitionEntry]);\n        }\n    };\n    #onError = (event) => {\n        return this[NavigationTransitionRejected](event.error);\n    };\n    [NavigationTransitionPromiseResolved] = (...promises) => {\n        for (const promise of promises) {\n            this.#promises.delete(promise);\n        }\n    };\n    [NavigationTransitionRejected] = async (reason) => {\n        if (this[NavigationTransitionIsRejected])\n            return;\n        this[NavigationTransitionIsRejected] = true;\n        this[NavigationTransitionAbort]();\n        const navigationType = this[NavigationTransitionNavigationType];\n        // console.log({ navigationType, reason, entry: this[NavigationTransitionEntry] });\n        if (typeof navigationType === \"string\" || navigationType === Rollback) {\n            // console.log(\"navigateerror\", { reason, z: isInvalidStateError(reason) });\n            await this.dispatchEvent({\n                type: \"navigateerror\",\n                error: reason,\n                get message() {\n                    if (reason instanceof Error) {\n                        return reason.message;\n                    }\n                    return `${reason}`;\n                },\n            });\n            // console.log(\"navigateerror finished\");\n            if (navigationType !== Rollback &&\n                !(isInvalidStateError(reason) || isAbortError(reason))) {\n                try {\n                    // console.log(\"Rollback\", navigationType);\n                    // console.warn(\"Rolling back immediately due to internal error\", error);\n                    await this.rollback()?.finished;\n                    // console.log(\"Rollback complete\", navigationType);\n                }\n                catch (error) {\n                    // console.error(\"Failed to rollback\", error);\n                    throw new InvalidStateError(\"Failed to rollback, please raise an issue at https://github.com/virtualstate/navigation/issues\");\n                }\n            }\n        }\n        this[NavigationTransitionCommittedDeferred].reject(reason);\n        this[NavigationTransitionFinishedDeferred].reject(reason);\n    };\n    [NavigationIntercept] = (options) => {\n        const transition = this;\n        const promise = parseOptions();\n        this[NavigationTransitionIsOngoing] = true;\n        if (!promise)\n            return;\n        this[NavigationTransitionIsAsync] = true;\n        const statusPromise = promise\n            .then(() => ({\n            status: \"fulfilled\",\n            value: undefined,\n        }))\n            .catch(async (reason) => {\n            await this[NavigationTransitionRejected](reason);\n            return {\n                status: \"rejected\",\n                reason,\n            };\n        });\n        this.#promises.add(statusPromise);\n        function parseOptions() {\n            if (!options)\n                return undefined;\n            if (isPromise(options)) {\n                return options;\n            }\n            if (typeof options === \"function\") {\n                return options();\n            }\n            const { handler, commit } = options;\n            if (commit && typeof commit === \"string\") {\n                transition[NavigationTransitionInterceptOptionsCommit].push(commit);\n            }\n            if (typeof handler !== \"function\") {\n                return;\n            }\n            return handler();\n        }\n    };\n    [NavigationTransitionWait] = async () => {\n        if (!this.#promises.size)\n            return this[NavigationTransitionEntry];\n        try {\n            const captured = [...this.#promises];\n            const results = await Promise.all(captured);\n            const rejected = results.filter((result) => result.status === \"rejected\");\n            // console.log({ rejected, results, captured });\n            if (rejected.length) {\n                // TODO handle differently when there are failures, e.g. we could move navigateerror to here\n                if (rejected.length === 1) {\n                    throw rejected[0].reason;\n                }\n                if (typeof AggregateError !== \"undefined\") {\n                    throw new AggregateError(rejected.map(({ reason }) => reason));\n                }\n                throw new Error();\n            }\n            this[NavigationTransitionPromiseResolved](...captured);\n            if (this[NavigationTransitionIsPending]) {\n                return this[NavigationTransitionWait]();\n            }\n            return this[NavigationTransitionEntry];\n        }\n        catch (error) {\n            await this.#onError(error);\n            throw await Promise.reject(error);\n        }\n        finally {\n            await this[NavigationTransitionFinish]();\n        }\n    };\n    [NavigationTransitionAbort]() {\n        if (this.#abortController.signal.aborted)\n            return;\n        this.#abortController.abort();\n        this.dispatchEvent({\n            type: NavigationTransitionAbort,\n            transition: this,\n            entry: this[NavigationTransitionEntry],\n        });\n    }\n    [NavigationTransitionFinish] = async () => {\n        if (this[NavigationTransitionIsFinished]) {\n            return;\n        }\n        await this.dispatchEvent({\n            type: NavigationTransitionFinish,\n            transition: this,\n            entry: this[NavigationTransitionEntry],\n            intercept: this[NavigationIntercept],\n        });\n    };\n}\n//# sourceMappingURL=navigation-transition.js.map","function getWindowBaseURL() {\n    try {\n        if (typeof window !== \"undefined\" && window.location) {\n            return window.location.href;\n        }\n    }\n    catch { }\n}\nexport function getBaseURL(url) {\n    const baseURL = getWindowBaseURL() ?? \"https://html.spec.whatwg.org/\";\n    return new URL(\n    // Deno wants this to be always a string\n    (url ?? \"\").toString(), baseURL);\n}\n//# sourceMappingURL=base-url.js.map","import { ok } from \"./is.js\";\nexport function defer() {\n    let resolve = undefined, reject = undefined, settled = false, status = \"pending\";\n    const promise = new Promise((resolveFn, rejectFn) => {\n        resolve = (value) => {\n            status = \"fulfilled\";\n            settled = true;\n            resolveFn(value);\n        };\n        reject = (reason) => {\n            status = \"rejected\";\n            settled = true;\n            rejectFn(reason);\n        };\n    });\n    ok(resolve);\n    ok(reject);\n    return {\n        get settled() {\n            return settled;\n        },\n        get status() {\n            return status;\n        },\n        resolve,\n        reject,\n        promise,\n    };\n}\n//# sourceMappingURL=defer.js.map","export class NavigationCurrentEntryChangeEvent {\n    type;\n    from;\n    navigationType;\n    constructor(type, init) {\n        this.type = type;\n        if (!init) {\n            throw new TypeError(\"init required\");\n        }\n        if (!init.from) {\n            throw new TypeError(\"from required\");\n        }\n        this.from = init.from;\n        this.navigationType = init.navigationType ?? undefined;\n    }\n}\n//# sourceMappingURL=navigation-current-entry-change-event.js.map","export class NavigateEvent {\n    type;\n    canIntercept;\n    /**\n     * @deprecated\n     */\n    canTransition;\n    destination;\n    downloadRequest;\n    formData;\n    hashChange;\n    info;\n    signal;\n    userInitiated;\n    navigationType;\n    constructor(type, init) {\n        this.type = type;\n        if (!init) {\n            throw new TypeError(\"init required\");\n        }\n        if (!init.destination) {\n            throw new TypeError(\"destination required\");\n        }\n        if (!init.signal) {\n            throw new TypeError(\"signal required\");\n        }\n        this.canIntercept = init.canIntercept ?? false;\n        this.canTransition = init.canIntercept ?? false;\n        this.destination = init.destination;\n        this.downloadRequest = init.downloadRequest;\n        this.formData = init.formData;\n        this.hashChange = init.hashChange ?? false;\n        this.info = init.info;\n        this.signal = init.signal;\n        this.userInitiated = init.userInitiated ?? false;\n        this.navigationType = init.navigationType ?? \"push\";\n    }\n    commit() {\n        throw new Error(\"Not implemented\");\n    }\n    intercept(options) {\n        throw new Error(\"Not implemented\");\n    }\n    preventDefault() {\n        throw new Error(\"Not implemented\");\n    }\n    reportError(reason) {\n        throw new Error(\"Not implemented\");\n    }\n    scroll() {\n        throw new Error(\"Not implemented\");\n    }\n    /**\n     * @deprecated\n     */\n    transitionWhile(options) {\n        return this.intercept(options);\n    }\n}\n//# sourceMappingURL=navigate-event.js.map","import { AbortController } from \"./import-abort-controller.js\";\nimport { InvalidStateError } from \"./navigation-errors.js\";\nimport { NavigationTransitionAbort, NavigationTransitionEntry, NavigationTransitionInitialEntries, NavigationTransitionNavigationType, NavigationIntercept, Rollback, } from \"./navigation-transition.js\";\nimport { getBaseURL } from \"./base-url.js\";\nimport { defer } from \"./defer.js\";\nimport { ok } from \"./is.js\";\nimport { NavigateEvent, NavigationCurrentEntryChangeEvent } from \"./events/index.js\";\nexport const NavigationFormData = Symbol.for(\"@virtualstate/navigation/formData\");\nexport const NavigationDownloadRequest = Symbol.for(\"@virtualstate/navigation/downloadRequest\");\nexport const NavigationCanIntercept = Symbol.for(\"@virtualstate/navigation/canIntercept\");\nexport const NavigationUserInitiated = Symbol.for(\"@virtualstate/navigation/userInitiated\");\nexport const NavigationOriginalEvent = Symbol.for(\"@virtualstate/navigation/originalEvent\");\nexport const EventAbortController = Symbol.for(\"@virtualstate/navigation/event/abortController\");\nfunction noop() {\n    return undefined;\n}\nfunction getEntryIndex(entries, entry) {\n    const knownIndex = entry.index;\n    if (knownIndex !== -1) {\n        return knownIndex;\n    }\n    // TODO find an entry if it has changed id\n    return -1;\n}\nexport function createNavigationTransition(context) {\n    const { commit: transitionCommit, currentIndex, options, known: initialKnown, currentEntry, transition, transition: { [NavigationTransitionInitialEntries]: previousEntries, [NavigationTransitionEntry]: entry, [NavigationIntercept]: intercept, }, reportError } = context;\n    let { transition: { [NavigationTransitionNavigationType]: navigationType }, } = context;\n    let resolvedEntries = [...previousEntries];\n    const known = new Set(initialKnown);\n    let destinationIndex = -1, nextIndex = currentIndex;\n    if (navigationType === Rollback) {\n        const { index } = options ?? { index: undefined };\n        if (typeof index !== \"number\")\n            throw new InvalidStateError(\"Expected index to be provided for rollback\");\n        destinationIndex = index;\n        nextIndex = index;\n    }\n    else if (navigationType === \"traverse\" || navigationType === \"reload\") {\n        destinationIndex = getEntryIndex(previousEntries, entry);\n        nextIndex = destinationIndex;\n    }\n    else if (navigationType === \"replace\") {\n        if (currentIndex === -1) {\n            navigationType = \"push\";\n            destinationIndex = currentIndex + 1;\n            nextIndex = destinationIndex;\n        }\n        else {\n            destinationIndex = currentIndex;\n            nextIndex = currentIndex;\n        }\n    }\n    else {\n        destinationIndex = currentIndex + 1;\n        nextIndex = destinationIndex;\n    }\n    if (typeof destinationIndex !== \"number\" || destinationIndex === -1) {\n        throw new InvalidStateError(\"Could not resolve next index\");\n    }\n    // console.log({ navigationType, entry, options });\n    if (!entry.url) {\n        console.trace({ navigationType, entry, options });\n        throw new InvalidStateError(\"Expected entry url\");\n    }\n    const destination = {\n        url: entry.url,\n        key: entry.key,\n        index: destinationIndex,\n        sameDocument: entry.sameDocument,\n        getState() {\n            return entry.getState();\n        },\n    };\n    let hashChange = false;\n    const currentUrlInstance = getBaseURL(currentEntry?.url);\n    const destinationUrlInstance = new URL(destination.url);\n    const currentHash = currentUrlInstance.hash;\n    const destinationHash = destinationUrlInstance.hash;\n    // console.log({ currentHash, destinationHash });\n    if (currentHash !== destinationHash) {\n        const currentUrlInstanceWithoutHash = new URL(currentUrlInstance.toString());\n        currentUrlInstanceWithoutHash.hash = \"\";\n        const destinationUrlInstanceWithoutHash = new URL(destinationUrlInstance.toString());\n        destinationUrlInstanceWithoutHash.hash = \"\";\n        hashChange =\n            currentUrlInstanceWithoutHash.toString() ===\n                destinationUrlInstanceWithoutHash.toString();\n        // console.log({ hashChange, currentUrlInstanceWithoutHash: currentUrlInstanceWithoutHash.toString(), before: destinationUrlInstanceWithoutHash.toString() })\n    }\n    let contextToCommit;\n    const { resolve: resolveCommit, promise: waitForCommit } = defer();\n    function commit() {\n        ok(contextToCommit, \"Expected contextToCommit\");\n        resolveCommit(transitionCommit(contextToCommit));\n    }\n    const abortController = new AbortController();\n    const event = new NavigateEvent(\"navigate\", {\n        signal: abortController.signal,\n        info: undefined,\n        ...options,\n        canIntercept: options?.[NavigationCanIntercept] ?? true,\n        formData: options?.[NavigationFormData] ?? undefined,\n        downloadRequest: options?.[NavigationDownloadRequest] ?? undefined,\n        hashChange,\n        navigationType: options?.navigationType ??\n            (typeof navigationType === \"string\" ? navigationType : \"replace\"),\n        userInitiated: options?.[NavigationUserInitiated] ?? false,\n        destination,\n    });\n    const originalEvent = options?.[NavigationOriginalEvent];\n    const preventDefault = transition[NavigationTransitionAbort].bind(transition);\n    if (originalEvent) {\n        const definedEvent = originalEvent;\n        event.intercept = function originalEventIntercept(options) {\n            definedEvent.preventDefault();\n            return intercept(options);\n        };\n        event.preventDefault = function originalEventPreventDefault() {\n            definedEvent.preventDefault();\n            return preventDefault();\n        };\n    }\n    else {\n        event.intercept = intercept;\n        event.preventDefault = preventDefault;\n    }\n    // Enforce that transitionWhile and intercept match\n    event.transitionWhile = event.intercept;\n    event.commit = commit;\n    if (reportError) {\n        event.reportError = reportError;\n    }\n    event.scroll = noop;\n    if (originalEvent) {\n        event.originalEvent = originalEvent;\n    }\n    const currentEntryChange = new NavigationCurrentEntryChangeEvent(\"currententrychange\", {\n        from: currentEntry,\n        navigationType: event.navigationType,\n    });\n    let updatedEntries = [], removedEntries = [], addedEntries = [];\n    const previousKeys = previousEntries.map(entry => entry.key);\n    if (navigationType === Rollback) {\n        const { entries } = options ?? { entries: undefined };\n        if (!entries)\n            throw new InvalidStateError(\"Expected entries to be provided for rollback\");\n        resolvedEntries = entries;\n        resolvedEntries.forEach((entry) => known.add(entry));\n        const keys = resolvedEntries.map(entry => entry.key);\n        removedEntries = previousEntries.filter(entry => !keys.includes(entry.key));\n        addedEntries = resolvedEntries.filter(entry => !previousKeys.includes(entry.key));\n    }\n    // Default next index is current entries length, aka\n    // console.log({ navigationType, givenNavigationType, index: this.#currentIndex, resolvedNextIndex });\n    else if (navigationType === \"replace\" ||\n        navigationType === \"traverse\" ||\n        navigationType === \"reload\") {\n        resolvedEntries[destination.index] = entry;\n        if (navigationType !== \"traverse\") {\n            updatedEntries.push(entry);\n        }\n        if (navigationType === \"replace\") {\n            resolvedEntries = resolvedEntries.slice(0, destination.index + 1);\n        }\n        const keys = resolvedEntries.map(entry => entry.key);\n        removedEntries = previousEntries.filter(entry => !keys.includes(entry.key));\n        if (previousKeys.includes(entry.id)) {\n            addedEntries = [entry];\n        }\n    }\n    else if (navigationType === \"push\") {\n        let removed = false;\n        // Trim forward, we have reset our stack\n        if (resolvedEntries[destination.index]) {\n            // const before = [...this.#entries];\n            resolvedEntries = resolvedEntries.slice(0, destination.index);\n            // console.log({ before, after: [...this.#entries]})\n            removed = true;\n        }\n        resolvedEntries.push(entry);\n        addedEntries = [entry];\n        if (removed) {\n            const keys = resolvedEntries.map(entry => entry.key);\n            removedEntries = previousEntries.filter(entry => !keys.includes(entry.key));\n        }\n    }\n    known.add(entry);\n    let entriesChange = undefined;\n    if (updatedEntries.length || addedEntries.length || removedEntries.length) {\n        entriesChange = {\n            updatedEntries,\n            addedEntries,\n            removedEntries\n        };\n    }\n    contextToCommit = {\n        entries: resolvedEntries,\n        index: nextIndex,\n        known,\n        entriesChange\n    };\n    return {\n        entries: resolvedEntries,\n        known,\n        index: nextIndex,\n        currentEntryChange,\n        destination,\n        navigate: event,\n        navigationType,\n        waitForCommit,\n        commit,\n        abortController\n    };\n}\n//# sourceMappingURL=create-navigation-transition.js.map","import { assertEvent } from \"./event.js\";\nexport function createEvent(event) {\n    if (typeof CustomEvent !== \"undefined\" && typeof event.type === \"string\") {\n        if (event instanceof CustomEvent) {\n            return event;\n        }\n        const { type, detail, ...rest } = event;\n        const customEvent = new CustomEvent(type, {\n            detail: detail ?? rest,\n        });\n        Object.assign(customEvent, rest);\n        assertEvent(customEvent, event.type);\n        return customEvent;\n    }\n    return event;\n}\n//# sourceMappingURL=create-event.js.map","import { NavigationHistoryEntry, NavigationHistoryEntryKnownAs, NavigationHistoryEntryNavigationType, NavigationHistoryEntrySetState, } from \"./navigation-entry.js\";\nimport { NavigationEventTarget } from \"./navigation-event-target.js\";\nimport { InvalidStateError } from \"./navigation-errors.js\";\nimport { EventTargetListeners } from \"./event-target/index.js\";\nimport { NavigationTransition, NavigationTransitionEntry, NavigationTransitionError, NavigationTransitionFinally, NavigationTransitionStart, NavigationTransitionInitialEntries, NavigationTransitionInitialIndex, NavigationTransitionKnown, NavigationTransitionNavigationType, NavigationTransitionParentEventTarget, NavigationTransitionPromises, NavigationTransitionWait, Rollback, Unset, NavigationIntercept, NavigationTransitionStartDeadline, NavigationTransitionCommit, NavigationTransitionFinish, NavigationTransitionAbort, NavigationTransitionIsOngoing, NavigationTransitionFinishedDeferred, NavigationTransitionCommittedDeferred, NavigationTransitionIsAsync, NavigationTransitionCommitIsManual, NavigationTransitionRejected, } from \"./navigation-transition.js\";\nimport { createNavigationTransition, } from \"./create-navigation-transition.js\";\nimport { createEvent } from \"./event-target/create-event.js\";\nimport { getBaseURL } from \"./base-url.js\";\nimport { isPromise, isPromiseRejectedResult } from \"./is.js\";\nimport { NavigationCurrentEntryChangeEvent } from \"./events/index.js\";\nexport * from \"./spec/navigation.js\";\nexport const NavigationSetOptions = Symbol.for(\"@virtualstate/navigation/setOptions\");\nexport const NavigationSetEntries = Symbol.for(\"@virtualstate/navigation/setEntries\");\nexport const NavigationSetCurrentIndex = Symbol.for(\"@virtualstate/navigation/setCurrentIndex\");\nexport const NavigationSetCurrentKey = Symbol.for(\"@virtualstate/navigation/setCurrentKey\");\nexport const NavigationGetState = Symbol.for(\"@virtualstate/navigation/getState\");\nexport const NavigationSetState = Symbol.for(\"@virtualstate/navigation/setState\");\nexport const NavigationDisposeState = Symbol.for(\"@virtualstate/navigation/disposeState\");\nexport function isNavigationNavigationType(value) {\n    return (value === \"reload\" ||\n        value === \"push\" ||\n        value === \"replace\" ||\n        value === \"traverse\");\n}\nexport class Navigation extends NavigationEventTarget {\n    // Should be always 0 or 1\n    #transitionInProgressCount = 0;\n    // #activePromise?: Promise<void> = undefined;\n    #entries = [];\n    #known = new Set();\n    #currentIndex = -1;\n    #activeTransition;\n    #knownTransitions = new WeakSet();\n    #baseURL = \"\";\n    #initialEntry = undefined;\n    #options = undefined;\n    get canGoBack() {\n        return !!this.#entries[this.#currentIndex - 1];\n    }\n    get canGoForward() {\n        return !!this.#entries[this.#currentIndex + 1];\n    }\n    get currentEntry() {\n        if (this.#currentIndex === -1) {\n            if (!this.#initialEntry) {\n                this.#initialEntry = new NavigationHistoryEntry({\n                    getState: this[NavigationGetState],\n                    navigationType: \"push\",\n                    index: -1,\n                    sameDocument: false,\n                    url: this.#baseURL.toString()\n                });\n            }\n            return this.#initialEntry;\n        }\n        return this.#entries[this.#currentIndex];\n    }\n    get transition() {\n        const transition = this.#activeTransition;\n        // Never let an aborted transition leak, it doesn't need to be accessed any more\n        return transition?.signal.aborted ? undefined : transition;\n    }\n    constructor(options = {}) {\n        super();\n        this[NavigationSetOptions](options);\n    }\n    [NavigationSetOptions](options) {\n        this.#options = options;\n        this.#baseURL = getBaseURL(options?.baseURL);\n        this.#entries = [];\n        if (options.entries) {\n            this[NavigationSetEntries](options.entries);\n        }\n        if (options.currentKey) {\n            this[NavigationSetCurrentKey](options.currentKey);\n        }\n        else if (typeof options.currentIndex === \"number\") {\n            this[NavigationSetCurrentIndex](options.currentIndex);\n        }\n    }\n    /**\n     * Set the current entry key without any lifecycle eventing\n     *\n     * This would be more exact than providing an index\n     * @param key\n     */\n    [NavigationSetCurrentKey](key) {\n        const index = this.#entries.findIndex(entry => entry.key === key);\n        // If the key can't be found, becomes a no-op\n        if (index === -1)\n            return;\n        this.#currentIndex = index;\n    }\n    /**\n     * Set the current entry index without any lifecycle eventing\n     * @param index\n     */\n    [NavigationSetCurrentIndex](index) {\n        if (index <= -1)\n            return;\n        if (index >= this.#entries.length)\n            return;\n        this.#currentIndex = index;\n    }\n    /**\n     * Set the entries available without any lifecycle eventing\n     * @param entries\n     */\n    [NavigationSetEntries](entries) {\n        this.#entries = entries.map(({ key, url, navigationType, state, sameDocument }, index) => new NavigationHistoryEntry({\n            getState: this[NavigationGetState],\n            navigationType: isNavigationNavigationType(navigationType) ? navigationType : \"push\",\n            sameDocument: sameDocument ?? true,\n            index,\n            url,\n            key,\n            state\n        }));\n        if (this.#currentIndex === -1 && this.#entries.length) {\n            // Initialise, even if its not the one that was expected\n            this.#currentIndex = 0;\n        }\n    }\n    [NavigationGetState] = (entry) => {\n        return this.#options?.getState?.(entry) ?? undefined;\n    };\n    [NavigationSetState] = (entry) => {\n        return this.#options?.setState?.(entry);\n    };\n    [NavigationDisposeState] = (entry) => {\n        return this.#options?.disposeState?.(entry);\n    };\n    back(options) {\n        if (!this.canGoBack)\n            throw new InvalidStateError(\"Cannot go back\");\n        const entry = this.#entries[this.#currentIndex - 1];\n        return this.#pushEntry(\"traverse\", this.#cloneNavigationHistoryEntry(entry, {\n            ...options,\n            navigationType: \"traverse\",\n        }));\n    }\n    entries() {\n        return [...this.#entries];\n    }\n    forward(options) {\n        if (!this.canGoForward)\n            throw new InvalidStateError();\n        const entry = this.#entries[this.#currentIndex + 1];\n        return this.#pushEntry(\"traverse\", this.#cloneNavigationHistoryEntry(entry, {\n            ...options,\n            navigationType: \"traverse\",\n        }));\n    }\n    /**\n    /**\n     * @deprecated use traverseTo\n     */\n    goTo(key, options) {\n        return this.traverseTo(key, options);\n    }\n    traverseTo(key, options) {\n        const found = this.#entries.find((entry) => entry.key === key);\n        if (found) {\n            return this.#pushEntry(\"traverse\", this.#cloneNavigationHistoryEntry(found, {\n                ...options,\n                navigationType: \"traverse\",\n            }));\n        }\n        throw new InvalidStateError();\n    }\n    #isSameDocument = (url) => {\n        function isSameOrigins(a, b) {\n            return a.origin === b.origin;\n        }\n        const currentEntryUrl = this.currentEntry?.url;\n        if (!currentEntryUrl)\n            return true;\n        return isSameOrigins(new URL(currentEntryUrl), new URL(url));\n    };\n    navigate(url, options) {\n        let baseURL = this.#baseURL;\n        if (this.currentEntry?.url) {\n            // This allows use to use relative\n            baseURL = this.currentEntry?.url;\n        }\n        const nextUrl = new URL(url, baseURL).toString();\n        let navigationType = \"push\";\n        if (options?.history === \"push\" || options?.history === \"replace\") {\n            navigationType = options?.history;\n        }\n        const entry = this.#createNavigationHistoryEntry({\n            getState: this[NavigationGetState],\n            url: nextUrl,\n            ...options,\n            sameDocument: this.#isSameDocument(nextUrl),\n            navigationType,\n        });\n        return this.#pushEntry(navigationType, entry, undefined, options);\n    }\n    #cloneNavigationHistoryEntry = (entry, options) => {\n        return this.#createNavigationHistoryEntry({\n            ...entry,\n            getState: this[NavigationGetState],\n            index: entry?.index ?? undefined,\n            state: options?.state ?? entry?.getState(),\n            navigationType: entry?.[NavigationHistoryEntryNavigationType] ??\n                (typeof options?.navigationType === \"string\"\n                    ? options.navigationType\n                    : \"replace\"),\n            ...options,\n            get [NavigationHistoryEntryKnownAs]() {\n                return entry?.[NavigationHistoryEntryKnownAs];\n            },\n            get [EventTargetListeners]() {\n                return entry?.[EventTargetListeners];\n            },\n        });\n    };\n    #createNavigationHistoryEntry = (options) => {\n        const entry = new NavigationHistoryEntry({\n            ...options,\n            index: options.index ??\n                (() => {\n                    return this.#entries.indexOf(entry);\n                }),\n        });\n        return entry;\n    };\n    #pushEntry = (navigationType, entry, transition, options) => {\n        /* c8 ignore start */\n        if (entry === this.currentEntry)\n            throw new InvalidStateError();\n        const existingPosition = this.#entries.findIndex((existing) => existing.id === entry.id);\n        if (existingPosition > -1) {\n            throw new InvalidStateError();\n        }\n        /* c8 ignore end */\n        return this.#commitTransition(navigationType, entry, transition, options);\n    };\n    #commitTransition = (givenNavigationType, entry, transition, options) => {\n        const nextTransition = transition ??\n            new NavigationTransition({\n                from: entry,\n                navigationType: typeof givenNavigationType === \"string\"\n                    ? givenNavigationType\n                    : \"replace\",\n                rollback: (options) => {\n                    return this.#rollback(nextTransition, options);\n                },\n                [NavigationTransitionNavigationType]: givenNavigationType,\n                [NavigationTransitionInitialEntries]: [...this.#entries],\n                [NavigationTransitionInitialIndex]: this.#currentIndex,\n                [NavigationTransitionKnown]: [...this.#known],\n                [NavigationTransitionEntry]: entry,\n                [NavigationTransitionParentEventTarget]: this,\n            });\n        const { finished, committed } = nextTransition;\n        const handler = () => {\n            return this.#immediateTransition(givenNavigationType, entry, nextTransition, options);\n        };\n        this.#queueTransition(nextTransition);\n        void handler().catch((error) => void error);\n        // let nextPromise;\n        // if (!this.#transitionInProgressCount || !this.#activePromise) {\n        //   nextPromise = handler().catch((error) => void error);\n        // } else {\n        //   nextPromise = this.#activePromise.then(handler);\n        // }\n        //\n        // const promise = nextPromise\n        //     .catch(error => void error)\n        //     .then(() => {\n        //       if (this.#activePromise === promise) {\n        //         this.#activePromise = undefined;\n        //       }\n        //     })\n        //\n        // this.#activePromise = promise;\n        return { committed, finished };\n    };\n    #queueTransition = (transition) => {\n        // TODO consume errors that are not abort errors\n        // transition.finished.catch(error => void error);\n        this.#knownTransitions.add(transition);\n    };\n    #immediateTransition = (givenNavigationType, entry, transition, options) => {\n        try {\n            // This number can grow if navigation is\n            // called during a transition\n            //\n            // ... I had used transitionInProgressCount as a\n            // safeguard until I could see this flow firsthand\n            this.#transitionInProgressCount += 1;\n            return this.#transition(givenNavigationType, entry, transition, options);\n        }\n        finally {\n            this.#transitionInProgressCount -= 1;\n        }\n    };\n    #rollback = (rollbackTransition, options) => {\n        const previousEntries = rollbackTransition[NavigationTransitionInitialEntries];\n        const previousIndex = rollbackTransition[NavigationTransitionInitialIndex];\n        const previousCurrent = previousEntries[previousIndex];\n        // console.log(\"z\");\n        // console.log(\"Rollback!\", { previousCurrent, previousEntries, previousIndex });\n        const entry = previousCurrent\n            ? this.#cloneNavigationHistoryEntry(previousCurrent, options)\n            : undefined;\n        const nextOptions = {\n            ...options,\n            index: previousIndex,\n            known: new Set([...this.#known, ...previousEntries]),\n            navigationType: entry?.[NavigationHistoryEntryNavigationType] ?? \"replace\",\n            entries: previousEntries,\n        };\n        const resolvedNavigationType = entry ? Rollback : Unset;\n        const resolvedEntry = entry ??\n            this.#createNavigationHistoryEntry({\n                getState: this[NavigationGetState],\n                navigationType: \"replace\",\n                index: nextOptions.index,\n                sameDocument: true,\n                ...options,\n            });\n        return this.#pushEntry(resolvedNavigationType, resolvedEntry, undefined, nextOptions);\n    };\n    #transition = (givenNavigationType, entry, transition, options) => {\n        // console.log({ givenNavigationType, transition });\n        let navigationType = givenNavigationType;\n        const performance = getPerformance();\n        if (performance &&\n            entry.sameDocument &&\n            typeof navigationType === \"string\") {\n            performance?.mark?.(`same-document-navigation:${entry.id}`);\n        }\n        let currentEntryChangeEvent = false, committedCurrentEntryChange = false;\n        const { currentEntry } = this;\n        void this.#activeTransition?.finished?.catch((error) => error);\n        void this.#activeTransition?.[NavigationTransitionFinishedDeferred]?.promise?.catch((error) => error);\n        void this.#activeTransition?.[NavigationTransitionCommittedDeferred]?.promise?.catch((error) => error);\n        this.#activeTransition?.[NavigationTransitionAbort]();\n        this.#activeTransition = transition;\n        const startEventPromise = transition.dispatchEvent({\n            type: NavigationTransitionStart,\n            transition,\n            entry,\n        });\n        const syncCommit = ({ entries, index, known }) => {\n            if (transition.signal.aborted)\n                return;\n            this.#entries = entries;\n            if (known) {\n                this.#known = new Set([...this.#known, ...known]);\n            }\n            this.#currentIndex = index;\n            // Let's trigger external state here\n            // because it is the absolute point of\n            // committing to using an entry\n            //\n            // If the entry came from an external source\n            // then internal to getState the external source will be pulled from\n            // only if the entry doesn't hold the state in memory\n            //\n            // TLDR I believe this will be no issue doing here, even if we end up\n            // calling an external setState multiple times, it is better than\n            // loss of the state\n            this[NavigationSetState](this.currentEntry);\n        };\n        const asyncCommit = async (commit) => {\n            if (committedCurrentEntryChange) {\n                return;\n            }\n            committedCurrentEntryChange = true;\n            syncCommit(commit);\n            const { entriesChange } = commit;\n            const promises = [\n                transition.dispatchEvent(createEvent({\n                    type: NavigationTransitionCommit,\n                    transition,\n                    entry,\n                }))\n            ];\n            if (entriesChange) {\n                promises.push(this.dispatchEvent(createEvent({\n                    type: \"entrieschange\",\n                    ...entriesChange\n                })));\n            }\n            await Promise.all(promises);\n        };\n        const unsetTransition = async () => {\n            await startEventPromise;\n            if (!(typeof options?.index === \"number\" && options.entries))\n                throw new InvalidStateError();\n            const previous = this.entries();\n            const previousKeys = previous.map(entry => entry.key);\n            const keys = options.entries.map(entry => entry.key);\n            const removedEntries = previous.filter(entry => !keys.includes(entry.key));\n            const addedEntries = options.entries.filter(entry => !previousKeys.includes(entry.key));\n            await asyncCommit({\n                entries: options.entries,\n                index: options.index,\n                known: options.known,\n                entriesChange: (removedEntries.length || addedEntries.length) ? {\n                    removedEntries,\n                    addedEntries,\n                    updatedEntries: []\n                } : undefined\n            });\n            await this.dispatchEvent(createEvent({\n                type: \"currententrychange\",\n            }));\n            currentEntryChangeEvent = true;\n            return entry;\n        };\n        const completeTransition = () => {\n            if (givenNavigationType === Unset) {\n                return unsetTransition();\n            }\n            const transitionResult = createNavigationTransition({\n                currentEntry,\n                currentIndex: this.#currentIndex,\n                options,\n                transition,\n                known: this.#known,\n                commit: asyncCommit,\n                reportError: transition[NavigationTransitionRejected]\n            });\n            const microtask = new Promise(queueMicrotask);\n            let promises = [];\n            const iterator = transitionSteps(transitionResult)[Symbol.iterator]();\n            const iterable = {\n                [Symbol.iterator]: () => ({ next: () => iterator.next() }),\n            };\n            async function syncTransition() {\n                for (const promise of iterable) {\n                    if (isPromise(promise)) {\n                        promises.push(Promise.allSettled([\n                            promise\n                        ]).then(([result]) => result));\n                    }\n                    if (transition[NavigationTransitionCommitIsManual] ||\n                        (currentEntryChangeEvent && transition[NavigationTransitionIsAsync])) {\n                        return asyncTransition().then(syncTransition);\n                    }\n                    if (transition.signal.aborted) {\n                        break;\n                    }\n                }\n                if (promises.length) {\n                    return asyncTransition();\n                }\n            }\n            async function asyncTransition() {\n                const captured = [...promises];\n                if (captured.length) {\n                    promises = [];\n                    const results = await Promise.all(captured);\n                    const rejected = results.filter(isPromiseRejectedResult);\n                    if (rejected.length === 1) {\n                        throw await Promise.reject(rejected[0]);\n                    }\n                    else if (rejected.length) {\n                        throw new AggregateError(rejected, rejected[0].reason?.message);\n                    }\n                }\n                else if (!transition[NavigationTransitionIsOngoing]) {\n                    await microtask;\n                }\n            }\n            // console.log(\"Returning\", { entry });\n            return syncTransition()\n                .then(() => transition[NavigationTransitionIsOngoing] ? undefined : microtask)\n                .then(() => entry);\n        };\n        const dispose = async () => this.#dispose();\n        function* transitionSteps(transitionResult) {\n            const microtask = new Promise(queueMicrotask);\n            const { currentEntryChange, navigate, waitForCommit, commit, abortController } = transitionResult;\n            const navigateAbort = abortController.abort.bind(abortController);\n            transition.signal.addEventListener(\"abort\", navigateAbort, {\n                once: true,\n            });\n            if (typeof navigationType === \"string\" || navigationType === Rollback) {\n                const promise = currentEntry?.dispatchEvent(createEvent({\n                    type: \"navigatefrom\",\n                    intercept: transition[NavigationIntercept],\n                    /**\n                     * @deprecated\n                     */\n                    transitionWhile: transition[NavigationIntercept],\n                }));\n                if (promise)\n                    yield promise;\n            }\n            if (typeof navigationType === \"string\") {\n                yield transition.dispatchEvent(navigate);\n            }\n            if (!transition[NavigationTransitionCommitIsManual]) {\n                commit();\n            }\n            yield waitForCommit;\n            if (entry.sameDocument) {\n                yield transition.dispatchEvent(currentEntryChange);\n            }\n            currentEntryChangeEvent = true;\n            if (typeof navigationType === \"string\") {\n                yield entry.dispatchEvent(createEvent({\n                    type: \"navigateto\",\n                    intercept: transition[NavigationIntercept],\n                    /**\n                     * @deprecated\n                     */\n                    transitionWhile: transition[NavigationIntercept],\n                }));\n            }\n            yield dispose();\n            if (!transition[NavigationTransitionPromises].size) {\n                yield microtask;\n            }\n            yield transition.dispatchEvent({\n                type: NavigationTransitionStartDeadline,\n                transition,\n                entry,\n            });\n            yield transition[NavigationTransitionWait]();\n            transition.signal.removeEventListener(\"abort\", navigateAbort);\n            yield transition[NavigationTransitionFinish]();\n            if (typeof navigationType === \"string\") {\n                yield transition.dispatchEvent(createEvent({\n                    type: \"finish\",\n                    intercept: transition[NavigationIntercept],\n                    /**\n                     * @deprecated\n                     */\n                    transitionWhile: transition[NavigationIntercept],\n                }));\n                yield transition.dispatchEvent(createEvent({\n                    type: \"navigatesuccess\",\n                    intercept: transition[NavigationIntercept],\n                    /**\n                     * @deprecated\n                     */\n                    transitionWhile: transition[NavigationIntercept],\n                }));\n            }\n        }\n        const maybeSyncTransition = () => {\n            try {\n                return completeTransition();\n            }\n            catch (error) {\n                return Promise.reject(error);\n            }\n        };\n        return Promise.allSettled([maybeSyncTransition()])\n            .then(async ([detail]) => {\n            if (detail.status === \"rejected\") {\n                await transition.dispatchEvent({\n                    type: NavigationTransitionError,\n                    error: detail.reason,\n                    transition,\n                    entry,\n                });\n            }\n            await dispose();\n            await transition.dispatchEvent({\n                type: NavigationTransitionFinally,\n                transition,\n                entry,\n            });\n            await transition[NavigationTransitionWait]();\n            if (this.#activeTransition === transition) {\n                this.#activeTransition = undefined;\n            }\n            if (entry.sameDocument && typeof navigationType === \"string\") {\n                performance.mark(`same-document-navigation-finish:${entry.id}`);\n                performance.measure(`same-document-navigation:${entry.url}`, `same-document-navigation:${entry.id}`, `same-document-navigation-finish:${entry.id}`);\n            }\n        })\n            .then(() => entry);\n    };\n    #dispose = async () => {\n        // console.log(JSON.stringify({ known: [...this.#known], entries: this.#entries }));\n        for (const known of this.#known) {\n            const index = this.#entries.findIndex((entry) => entry.key === known.key);\n            if (index !== -1) {\n                // Still in use\n                continue;\n            }\n            // No index, no longer known\n            this.#known.delete(known);\n            const event = createEvent({\n                type: \"dispose\",\n                entry: known,\n            });\n            this[NavigationDisposeState](known);\n            await known.dispatchEvent(event);\n            await this.dispatchEvent(event);\n        }\n        // console.log(JSON.stringify({ pruned: [...this.#known] }));\n    };\n    reload(options) {\n        const { currentEntry } = this;\n        if (!currentEntry)\n            throw new InvalidStateError();\n        const entry = this.#cloneNavigationHistoryEntry(currentEntry, options);\n        return this.#pushEntry(\"reload\", entry, undefined, options);\n    }\n    updateCurrentEntry(options) {\n        const { currentEntry } = this;\n        if (!currentEntry) {\n            throw new InvalidStateError(\"Expected current entry\");\n        }\n        // Instant change\n        currentEntry[NavigationHistoryEntrySetState](options.state);\n        this[NavigationSetState](currentEntry);\n        const currentEntryChange = new NavigationCurrentEntryChangeEvent(\"currententrychange\", {\n            from: currentEntry,\n            navigationType: undefined,\n        });\n        const entriesChange = createEvent({\n            type: \"entrieschange\",\n            addedEntries: [],\n            removedEntries: [],\n            updatedEntries: [\n                currentEntry\n            ]\n        });\n        return Promise.all([\n            this.dispatchEvent(currentEntryChange),\n            this.dispatchEvent(entriesChange)\n        ]);\n    }\n}\nfunction getPerformance() {\n    if (typeof performance !== \"undefined\") {\n        return performance;\n    }\n    /* c8 ignore start */\n    return {\n        now() {\n            return Date.now();\n        },\n        mark() { },\n        measure() { },\n    };\n    // const { performance: nodePerformance } = await import(\"perf_hooks\");\n    // return nodePerformance;\n    /* c8 ignore end */\n}\n//# sourceMappingURL=navigation.js.map","import { NavigationTransitionCommittedDeferred } from \"./navigation-transition.js\";\nimport { getBaseURL } from \"./base-url.js\";\nexport const AppLocationCheckChange = Symbol.for(\"@virtualstate/navigation/location/checkChange\");\nexport const AppLocationAwaitFinished = Symbol.for(\"@virtualstate/navigation/location/awaitFinished\");\nexport const AppLocationTransitionURL = Symbol.for(\"@virtualstate/navigation/location/transitionURL\");\nexport const AppLocationUrl = Symbol.for(\"@virtualstate/navigation/location/url\");\nexport const NAVIGATION_LOCATION_DEFAULT_URL = \"https://html.spec.whatwg.org/\";\n/**\n * @experimental\n */\nexport class NavigationLocation {\n    #options;\n    #navigation;\n    constructor(options) {\n        this.#options = options;\n        this.#navigation = options.navigation;\n        const reset = () => {\n            this.#transitioningURL = undefined;\n            this.#baseURL = undefined;\n        };\n        this.#navigation.addEventListener(\"navigate\", () => {\n            const transition = this.#navigation.transition;\n            if (transition && isCommittedAvailable(transition)) {\n                transition[NavigationTransitionCommittedDeferred].promise.then(reset, reset);\n            }\n            function isCommittedAvailable(transition) {\n                return NavigationTransitionCommittedDeferred in transition;\n            }\n        });\n        this.#navigation.addEventListener(\"currententrychange\", reset);\n    }\n    #urls = new WeakMap();\n    #transitioningURL;\n    #baseURL;\n    get [AppLocationUrl]() {\n        if (this.#transitioningURL) {\n            return this.#transitioningURL;\n        }\n        const { currentEntry } = this.#navigation;\n        if (!currentEntry) {\n            this.#baseURL = getBaseURL(this.#options.baseURL);\n            return this.#baseURL;\n        }\n        const existing = this.#urls.get(currentEntry);\n        if (existing)\n            return existing;\n        const next = new URL(currentEntry.url ?? NAVIGATION_LOCATION_DEFAULT_URL);\n        this.#urls.set(currentEntry, next);\n        return next;\n    }\n    get hash() {\n        return this[AppLocationUrl].hash;\n    }\n    set hash(value) {\n        this.#setUrlValue(\"hash\", value);\n    }\n    get host() {\n        return this[AppLocationUrl].host;\n    }\n    set host(value) {\n        this.#setUrlValue(\"host\", value);\n    }\n    get hostname() {\n        return this[AppLocationUrl].hostname;\n    }\n    set hostname(value) {\n        this.#setUrlValue(\"hostname\", value);\n    }\n    get href() {\n        return this[AppLocationUrl].href;\n    }\n    set href(value) {\n        this.#setUrlValue(\"href\", value);\n    }\n    get origin() {\n        return this[AppLocationUrl].origin;\n    }\n    get pathname() {\n        return this[AppLocationUrl].pathname;\n    }\n    set pathname(value) {\n        this.#setUrlValue(\"pathname\", value);\n    }\n    get port() {\n        return this[AppLocationUrl].port;\n    }\n    set port(value) {\n        this.#setUrlValue(\"port\", value);\n    }\n    get protocol() {\n        return this[AppLocationUrl].protocol;\n    }\n    set protocol(value) {\n        this.#setUrlValue(\"protocol\", value);\n    }\n    get search() {\n        return this[AppLocationUrl].search;\n    }\n    set search(value) {\n        this.#setUrlValue(\"search\", value);\n    }\n    #setUrlValue = (key, value) => {\n        const currentUrlString = this[AppLocationUrl].toString();\n        let nextUrl;\n        if (key === \"href\") {\n            nextUrl = new URL(value, currentUrlString);\n        }\n        else {\n            nextUrl = new URL(currentUrlString);\n            nextUrl[key] = value;\n        }\n        const nextUrlString = nextUrl.toString();\n        if (currentUrlString === nextUrlString) {\n            return;\n        }\n        void this.#transitionURL(nextUrl, () => this.#navigation.navigate(nextUrlString));\n    };\n    replace(url) {\n        return this.#transitionURL(url, (url) => this.#navigation.navigate(url.toString(), {\n            history: \"replace\",\n        }));\n    }\n    reload() {\n        return this.#awaitFinished(this.#navigation.reload());\n    }\n    assign(url) {\n        return this.#transitionURL(url, (url) => this.#navigation.navigate(url.toString()));\n    }\n    [AppLocationTransitionURL](url, fn) {\n        return this.#transitionURL(url, fn);\n    }\n    #transitionURL = async (url, fn) => {\n        const instance = (this.#transitioningURL =\n            typeof url === \"string\"\n                ? new URL(url, this[AppLocationUrl].toString())\n                : url);\n        try {\n            await this.#awaitFinished(fn(instance));\n        }\n        finally {\n            if (this.#transitioningURL === instance) {\n                this.#transitioningURL = undefined;\n            }\n        }\n    };\n    [AppLocationAwaitFinished](result) {\n        return this.#awaitFinished(result);\n    }\n    #awaitFinished = async (result) => {\n        this.#baseURL = undefined;\n        if (!result)\n            return;\n        const { committed, finished } = result;\n        await Promise.all([\n            committed || Promise.resolve(undefined),\n            finished || Promise.resolve(undefined),\n        ]);\n    };\n    #triggerIfUrlChanged = () => {\n        const current = this[AppLocationUrl];\n        const currentUrl = current.toString();\n        const expectedUrl = this.#navigation.currentEntry?.url;\n        if (currentUrl !== expectedUrl) {\n            return this.#transitionURL(current, () => this.#navigation.navigate(currentUrl));\n        }\n    };\n    /**\n     * This is needed if you have changed searchParams using its mutating methods\n     *\n     * TODO replace get searchParams with an observable change to auto trigger this function\n     */\n    [AppLocationCheckChange]() {\n        return this.#triggerIfUrlChanged();\n    }\n}\n//# sourceMappingURL=location.js.map","import { NavigationLocation, AppLocationAwaitFinished, AppLocationTransitionURL, } from \"./location.js\";\nimport { InvalidStateError } from \"./navigation-errors.js\";\nconst State = Symbol.for(\"@virtualstate/navigation/history/state\");\n/**\n * @experimental\n */\nexport class NavigationHistory extends NavigationLocation {\n    #options;\n    #navigation;\n    constructor(options) {\n        super(options);\n        this.#options = options;\n        this.#navigation = options.navigation;\n    }\n    get length() {\n        return this.#navigation.entries().length;\n    }\n    scrollRestoration = \"manual\";\n    get state() {\n        const currentState = this.#navigation.currentEntry?.getState();\n        if (typeof currentState === \"string\" || typeof currentState === \"number\" || typeof currentState === \"boolean\") {\n            return currentState;\n        }\n        return this.#options[State] ?? undefined;\n    }\n    back() {\n        const entries = this.#navigation.entries();\n        const index = this.#navigation.currentEntry?.index ?? -1;\n        const back = entries[index - 1];\n        const url = back?.url;\n        if (!url)\n            throw new InvalidStateError(\"Cannot go back\");\n        return this[AppLocationTransitionURL](url, () => this.#navigation.back());\n    }\n    forward() {\n        const entries = this.#navigation.entries();\n        const index = this.#navigation.currentEntry?.index ?? -1;\n        const forward = entries[index + 1];\n        const url = forward?.url;\n        if (!url)\n            throw new InvalidStateError(\"Cannot go forward\");\n        return this[AppLocationTransitionURL](url, () => this.#navigation.forward());\n    }\n    go(delta) {\n        if (typeof delta !== \"number\" || delta === 0 || isNaN(delta)) {\n            return this[AppLocationAwaitFinished](this.#navigation.reload());\n        }\n        const entries = this.#navigation.entries();\n        const { currentEntry } = this.#navigation;\n        if (!currentEntry) {\n            throw new Error(`Could not go ${delta}`);\n        }\n        const nextIndex = currentEntry.index + delta;\n        const nextEntry = entries[nextIndex];\n        if (!nextEntry) {\n            throw new Error(`Could not go ${delta}`);\n        }\n        const nextEntryKey = nextEntry.key;\n        return this[AppLocationAwaitFinished](this.#navigation.traverseTo(nextEntryKey));\n    }\n    replaceState(data, unused, url) {\n        if (url) {\n            return this[AppLocationTransitionURL](url, (url) => this.#navigation.navigate(url.toString(), {\n                state: data,\n                history: \"replace\",\n            }));\n        }\n        else {\n            return this.#navigation.updateCurrentEntry({\n                state: data\n            });\n        }\n    }\n    pushState(data, unused, url) {\n        if (url) {\n            return this[AppLocationTransitionURL](url, (url) => this.#navigation.navigate(url.toString(), {\n                state: data,\n            }));\n        }\n        else {\n            return this.#navigation.updateCurrentEntry({\n                state: data,\n            });\n        }\n    }\n}\n/**\n * @experimental\n * @internal\n */\nexport class NavigationSync extends NavigationHistory {\n}\n//# sourceMappingURL=history.js.map","export async function transition(navigation) {\n    let transition = undefined;\n    let finalPromise;\n    while (navigation.transition && transition !== navigation.transition) {\n        transition = navigation.transition;\n        finalPromise = transition.finished;\n        await finalPromise.catch(error => void error);\n    }\n    return finalPromise;\n}\n//# sourceMappingURL=transition.js.map","/** post rollup replace json **/\nconst structuredClone = (await getStructuredCloneModule()\n    .catch(structuredCloneFallback));\nconst getStructuredClone = () => structuredClone;\n/** post rollup replace json **/\nasync function getStructuredCloneModule() {\n    const { stringify, parse } = await import(\"@ungap/structured-clone/json\");\n    return { stringify, parse };\n}\nfunction structuredCloneFallback() {\n    const stringify = JSON.stringify.bind(JSON), parse = JSON.parse.bind(JSON);\n    return {\n        stringify,\n        parse\n    };\n}\nexport function stringify(value) {\n    return getStructuredClone().stringify(value);\n}\nexport function parse(value) {\n    return getStructuredClone().parse(value);\n}\n//# sourceMappingURL=structured-json.js.map","export const globalWindow = typeof window === \"undefined\" ? undefined : window;\n//# sourceMappingURL=global-window.js.map","export const globalSelf = typeof self === \"undefined\" ? undefined : self;\n//# sourceMappingURL=global-self.js.map","import { Navigation as NavigationPolyfill, NavigationSetCurrentKey, NavigationSetEntries, NavigationSetOptions } from \"./navigation.js\";\nimport { InvalidStateError } from \"./navigation-errors.js\";\nimport { NavigationDownloadRequest, NavigationFormData, NavigationOriginalEvent, NavigationUserInitiated } from \"./create-navigation-transition.js\";\nimport { stringify, parse } from './util/structured-json.js';\nimport { NavigationHistory } from \"./history.js\";\nimport { like, ok } from \"./is.js\";\nimport { globalWindow } from \"./global-window.js\";\nimport { globalSelf } from \"./global-self.js\";\nimport { v4 } from \"./util/uuid-or-random.js\";\nexport const NavigationKey = \"__@virtualstate/navigation/key\";\nexport const NavigationMeta = \"__@virtualstate/navigation/meta\";\nfunction getWindowHistory(givenWindow = globalWindow) {\n    if (typeof givenWindow === \"undefined\")\n        return undefined;\n    return givenWindow.history;\n}\nfunction getStateFromWindowHistory(givenWindow = globalWindow) {\n    const history = getWindowHistory(givenWindow);\n    if (!history)\n        return undefined;\n    const value = history.state;\n    return like(value) ? value : undefined;\n}\nfunction isStateHistoryMeta(state) {\n    return like(state) && state[NavigationMeta] === true;\n}\nfunction isStateHistoryWithMeta(state) {\n    return like(state) && isStateHistoryMeta(state[NavigationKey]);\n}\nfunction disposeHistoryState(entry, persist) {\n    if (!persist)\n        return;\n    if (typeof sessionStorage === \"undefined\")\n        return;\n    sessionStorage.removeItem(entry.key);\n}\nfunction getEntries(navigation, limit = DEFAULT_POLYFILL_OPTIONS.limit) {\n    let entries = navigation.entries();\n    if (typeof limit === \"number\") {\n        entries = entries.slice(-limit);\n    }\n    return entries.map(({ id, key, url, sameDocument }) => ({\n        id,\n        key,\n        url,\n        sameDocument\n    }));\n}\nfunction getNavigationEntryMeta(navigation, entry, limit = DEFAULT_POLYFILL_OPTIONS.limit) {\n    return {\n        [NavigationMeta]: true,\n        currentIndex: entry.index,\n        key: entry.key,\n        entries: getEntries(navigation, limit),\n        state: entry.getState()\n    };\n}\nfunction getNavigationEntryWithMeta(navigation, entry, limit = DEFAULT_POLYFILL_OPTIONS.limit) {\n    return {\n        [NavigationKey]: getNavigationEntryMeta(navigation, entry, limit)\n    };\n}\nfunction setHistoryState(navigation, history, entry, persist, limit) {\n    setStateInSession();\n    function getSerializableState() {\n        return getNavigationEntryWithMeta(navigation, entry, limit);\n    }\n    function setStateInSession() {\n        if (typeof sessionStorage === \"undefined\")\n            return;\n        try {\n            const raw = stringify(getSerializableState());\n            sessionStorage.setItem(entry.key, raw);\n        }\n        catch { }\n    }\n}\nfunction getHistoryState(history, entry) {\n    return (getStateFromHistoryIfMatchingKey() ??\n        getStateFromSession());\n    function getStateFromHistoryDirectly() {\n        try {\n            return history.state;\n        }\n        catch {\n            return undefined;\n        }\n    }\n    function getBaseState() {\n        const value = (history.originalState ??\n            getStateFromHistoryDirectly());\n        return like(value) ? value : undefined;\n    }\n    function getStateFromHistoryIfMatchingKey() {\n        const state = getBaseState();\n        if (!isStateHistoryWithMeta(state))\n            return undefined;\n        if (state[NavigationKey].key !== entry.key)\n            return undefined;\n        return state[NavigationKey].state;\n    }\n    function getStateFromSession() {\n        if (typeof sessionStorage === \"undefined\")\n            return undefined;\n        try {\n            const raw = sessionStorage.getItem(entry.key);\n            if (!raw)\n                return undefined;\n            const state = parse(raw);\n            if (!isStateHistoryWithMeta(state))\n                return undefined;\n            return state[NavigationKey].state;\n        }\n        catch {\n            return undefined;\n        }\n    }\n}\nexport const DEFAULT_POLYFILL_OPTIONS = Object.freeze({\n    persist: true,\n    persistState: true,\n    history: true,\n    limit: 50,\n    patch: true,\n    interceptEvents: true\n});\nexport function getPolyfill(options = DEFAULT_POLYFILL_OPTIONS) {\n    const { navigation } = getCompletePolyfill(options);\n    return navigation;\n}\nfunction isNavigationPolyfill(navigation) {\n    return (like(navigation) &&\n        typeof navigation[NavigationSetEntries] === \"function\" &&\n        typeof navigation[NavigationSetCurrentKey] === \"function\");\n}\nfunction getNavigationOnlyPolyfill(givenNavigation) {\n    // When using as a polyfill, we will auto initiate a single\n    // entry, but not cause an event for it\n    const entries = [\n        {\n            key: v4()\n        }\n    ];\n    const navigation = givenNavigation ?? new NavigationPolyfill({\n        entries\n    });\n    const history = new NavigationHistory({\n        navigation\n    });\n    return {\n        navigation,\n        history,\n        apply() {\n            if (isNavigationPolyfill(givenNavigation) && !navigation.entries().length) {\n                givenNavigation[NavigationSetEntries](entries);\n            }\n        }\n    };\n}\nfunction interceptWindowClicks(navigation, window) {\n    function clickCallback(ev, aEl) {\n        // console.log(\"<-- clickCallback -->\");\n        // TODO opt into queueMicrotask before process\n        process();\n        function process() {\n            if (!isAppNavigation(ev))\n                return;\n            ok(ev);\n            const options = {\n                history: \"auto\",\n                [NavigationUserInitiated]: true,\n                [NavigationDownloadRequest]: aEl.download,\n                [NavigationOriginalEvent]: ev,\n            };\n            navigation.navigate(aEl.href, options);\n        }\n    }\n    function submitCallback(ev, form) {\n        // console.log(\"<-- submitCallback -->\");\n        // TODO opt into queueMicrotask before process\n        process();\n        function process() {\n            if (ev.defaultPrevented)\n                return;\n            const method = ev.submitter && 'formMethod' in ev.submitter && ev.submitter.formMethod\n                ? ev.submitter.formMethod\n                : form.method;\n            // XXX: safe to ignore dialog method?\n            if (method === 'dialog')\n                return;\n            const action = ev.submitter && 'formAction' in ev.submitter && ev.submitter.formAction\n                ? ev.submitter.formAction\n                : form.action;\n            let formData;\n            /* c8 ignore start */\n            try {\n                formData = new FormData(form);\n            }\n            catch {\n                // For runtimes where we polyfilled the window & then evented it\n                // ... for some reason\n                formData = new FormData(undefined);\n            }\n            /* c8 ignore end */\n            const params = method === 'get'\n                ? new URLSearchParams([...formData].map(([k, v]) => v instanceof File ? [k, v.name] : [k, v]))\n                : undefined;\n            const navFormData = method === 'post'\n                ? formData\n                : undefined;\n            // action is always a fully qualified url in browsers\n            const url = new URL(action, navigation.currentEntry.url);\n            if (params)\n                url.search = params.toString();\n            const unknownEvent = ev;\n            ok(unknownEvent);\n            const options = {\n                history: \"auto\",\n                [NavigationUserInitiated]: true,\n                [NavigationFormData]: navFormData,\n                [NavigationOriginalEvent]: unknownEvent,\n            };\n            navigation.navigate(url.href, options);\n        }\n    }\n    // console.log(\"click event added\")\n    window.addEventListener(\"click\", (ev) => {\n        // console.log(\"click event\", ev)\n        if (ev.target?.ownerDocument === window.document) {\n            const aEl = getAnchorFromEvent(ev); // XXX: not sure what <a> tags without href do\n            if (like(aEl)) {\n                clickCallback(ev, aEl);\n            }\n        }\n    });\n    window.addEventListener(\"submit\", (ev) => {\n        // console.log(\"submit event\")\n        if (ev.target?.ownerDocument === window.document) {\n            const form = getFormFromEvent(ev);\n            if (like(form)) {\n                submitCallback(ev, form);\n            }\n        }\n    });\n}\nfunction getAnchorFromEvent(event) {\n    return matchesAncestor(getComposedPathTarget(event), \"a[href]:not([data-navigation-ignore])\");\n}\nfunction getFormFromEvent(event) {\n    return matchesAncestor(getComposedPathTarget(event), \"form:not([data-navigation-ignore])\");\n}\nfunction getComposedPathTarget(event) {\n    if (!event.composedPath) {\n        return event.target;\n    }\n    const targets = event.composedPath();\n    return targets[0] ?? event.target;\n}\nfunction patchGlobalScope(window, history, navigation) {\n    patchGlobals();\n    patchPopState();\n    patchHistory();\n    function patchWindow(window) {\n        try {\n            Object.defineProperty(window, \"navigation\", {\n                value: navigation,\n            });\n        }\n        catch (e) { }\n        if (!window.history) {\n            try {\n                Object.defineProperty(window, \"history\", {\n                    value: history,\n                });\n            }\n            catch (e) { }\n        }\n    }\n    function patchGlobals() {\n        patchWindow(window);\n        // If we don't have the global window, don't also patch global scope\n        if (window !== globalWindow)\n            return;\n        if (globalSelf) {\n            try {\n                Object.defineProperty(globalSelf, \"navigation\", {\n                    value: navigation,\n                });\n            }\n            catch (e) { }\n        }\n        if (typeof globalThis !== \"undefined\") {\n            try {\n                Object.defineProperty(globalThis, \"navigation\", {\n                    value: navigation,\n                });\n            }\n            catch (e) { }\n        }\n    }\n    function patchHistory() {\n        if (history instanceof NavigationHistory) {\n            // It's our polyfill, but probably externally passed to getPolyfill\n            return;\n        }\n        const polyfillHistory = new NavigationHistory({\n            navigation\n        });\n        const pushState = polyfillHistory.pushState.bind(polyfillHistory);\n        const replaceState = polyfillHistory.replaceState.bind(polyfillHistory);\n        const go = polyfillHistory.go.bind(polyfillHistory);\n        const back = polyfillHistory.back.bind(polyfillHistory);\n        const forward = polyfillHistory.forward.bind(polyfillHistory);\n        const prototype = Object.getPrototypeOf(history);\n        const descriptor = {\n            pushState: {\n                ...Object.getOwnPropertyDescriptor(prototype, \"pushState\"),\n                value: pushState\n            },\n            replaceState: {\n                ...Object.getOwnPropertyDescriptor(prototype, \"replaceState\"),\n                value: replaceState\n            },\n            go: {\n                ...Object.getOwnPropertyDescriptor(prototype, \"go\"),\n                value: go\n            },\n            back: {\n                ...Object.getOwnPropertyDescriptor(prototype, \"back\"),\n                value: back\n            },\n            forward: {\n                ...Object.getOwnPropertyDescriptor(prototype, \"forward\"),\n                value: forward\n            }\n        };\n        Object.defineProperties(prototype, descriptor);\n        const stateDescriptor = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(history), \"state\");\n        Object.defineProperty(history, \"state\", {\n            ...stateDescriptor,\n            get() {\n                // Derive history state only ever directly from navigation state\n                //\n                // Decouple from classic history.state\n                //\n                // If the original state is wanted, use history.originalState,\n                // which is done on a best effort basis and may be out of alignment from\n                // navigation.currentEntry.getState()\n                //\n                // This state will always be tied to the navigation, not the background\n                // browser's history stack, which could be offset from the applications\n                // expected state between moments of transition.\n                //\n                // The change of using navigation.currentEntry.getState()\n                // in place of history.state is significant, it's shifting to a model where\n                // there can be an entry only for one single operation and then replaced\n                //\n                // e.g.\n                //\n                // navigation.navigate(\"/1\", { state: { key: 1 }});\n                // navigation.navigate(\"/2\", { state: { key: 2 }});\n                // await navigation.transition?.finished;\n                //\n                // The above code, if ran, history.state might not keep up...\n                //\n                // ... In safari if we run replaceState too many times in 30 seconds\n                // then we will get an exception. So, inherently we know we\n                // cannot just freely make use of history.state as a deterministic like\n                // reference.\n                return polyfillHistory.state;\n            }\n        });\n        Object.defineProperty(history, \"originalState\", {\n            ...stateDescriptor\n        });\n    }\n    function patchPopState() {\n        if (!window.PopStateEvent)\n            return;\n        const popStateEventPrototype = window.PopStateEvent.prototype;\n        if (!popStateEventPrototype)\n            return;\n        const descriptor = Object.getOwnPropertyDescriptor(popStateEventPrototype, \"state\");\n        Object.defineProperty(popStateEventPrototype, \"state\", {\n            ...descriptor,\n            get() {\n                const original = descriptor.get.call(this);\n                if (!isStateHistoryWithMeta(original))\n                    return original;\n                return original[NavigationKey].state;\n            }\n        });\n        Object.defineProperty(popStateEventPrototype, \"originalState\", {\n            ...descriptor\n        });\n    }\n}\nexport function getCompletePolyfill(options = DEFAULT_POLYFILL_OPTIONS) {\n    const { persist: PERSIST_ENTRIES, persistState: PERSIST_ENTRIES_STATE, history: givenHistory, limit: patchLimit, patch: PATCH_HISTORY, interceptEvents: INTERCEPT_EVENTS, window: givenWindow = globalWindow, navigation: givenNavigation } = {\n        // These are super default options, if the object de\n        ...DEFAULT_POLYFILL_OPTIONS,\n        ...options\n    };\n    // console.log({\n    //   ...DEFAULT_POLYFILL_OPTIONS,\n    //   ...options\n    // })\n    const IS_PERSIST = PERSIST_ENTRIES || PERSIST_ENTRIES_STATE;\n    const window = givenWindow ?? globalWindow;\n    const history = options.history && typeof options.history !== \"boolean\" ?\n        options.history :\n        getWindowHistory(window);\n    if (!history) {\n        return getNavigationOnlyPolyfill();\n    }\n    // console.log(\"POLYFILL LOADING\");\n    ok(window, \"window required when using polyfill with history, this shouldn't be seen\");\n    // Use baseHistory so that we don't initialise entries we didn't intend to\n    // if we used a polyfill history\n    const historyInitialState = history?.state;\n    let initialMeta = {\n        [NavigationMeta]: true,\n        currentIndex: -1,\n        entries: [],\n        key: \"\",\n        state: undefined\n    };\n    if (isStateHistoryWithMeta(historyInitialState)) {\n        initialMeta = historyInitialState[NavigationKey];\n    }\n    let initialEntries = initialMeta.entries;\n    const HISTORY_INTEGRATION = !!((givenWindow || givenHistory) && history);\n    if (!initialEntries.length) {\n        let url = undefined;\n        if (window.location?.href) {\n            url = window.location.href;\n        }\n        let state = undefined;\n        if (!isStateHistoryWithMeta(historyInitialState) && !isStateHistoryMeta(historyInitialState)) {\n            // console.log(\"Using state history direct\", historyInitialState, history.state);\n            state = historyInitialState;\n        }\n        const key = v4();\n        initialEntries = [\n            {\n                key,\n                state,\n                url\n            }\n        ];\n        initialMeta.key = key;\n        initialMeta.currentIndex = 0;\n    }\n    // console.log(\"Initial Entries\", initialEntries)\n    const navigationOptions = {\n        entries: initialEntries,\n        currentIndex: initialMeta?.currentIndex,\n        currentKey: initialMeta?.key,\n        getState(entry) {\n            if (!HISTORY_INTEGRATION)\n                return;\n            return getHistoryState(history, entry);\n        },\n        setState(entry) {\n            // console.log({\n            //   setState: entry.getState(),\n            //   entry\n            // })\n            if (!HISTORY_INTEGRATION)\n                return;\n            if (!entry.sameDocument)\n                return;\n            setHistoryState(navigation, history, entry, IS_PERSIST, patchLimit);\n        },\n        disposeState(entry) {\n            if (!HISTORY_INTEGRATION)\n                return;\n            disposeHistoryState(entry, IS_PERSIST);\n        }\n    };\n    const navigation = givenNavigation ?? new NavigationPolyfill(navigationOptions);\n    const pushState = history?.pushState.bind(history);\n    const replaceState = history?.replaceState.bind(history);\n    const historyGo = history?.go.bind(history);\n    // const back = history?.back.bind(history);\n    // const forward = history?.forward.bind(history);\n    // const origin = typeof location === \"undefined\" ? \"https://example.com\" : location.origin;\n    return {\n        navigation,\n        history,\n        apply() {\n            // console.log(\"APPLYING POLYFILL TO NAVIGATION\");\n            if (isNavigationPolyfill(navigation)) {\n                // Initialise navigation options\n                navigation[NavigationSetOptions](navigationOptions);\n            }\n            if (HISTORY_INTEGRATION) {\n                const ignorePopState = new Set();\n                const ignoreCurrentEntryChange = new Set();\n                navigation.addEventListener(\"navigate\", event => {\n                    if (event.destination.sameDocument) {\n                        return;\n                    }\n                    // If the destination is not the same document, we are navigating away\n                    event.intercept({\n                        // Set commit after transition... and never commit!\n                        commit: \"after-transition\",\n                        async handler() {\n                            // Let other tasks do something and abort if needed\n                            queueMicrotask(() => {\n                                if (event.signal.aborted)\n                                    return;\n                                submit();\n                            });\n                        }\n                    });\n                    function submit() {\n                        if (like(event.originalEvent)) {\n                            const anchor = getAnchorFromEvent(event.originalEvent);\n                            if (anchor) {\n                                return submitAnchor(anchor);\n                            }\n                            else {\n                                const form = getFormFromEvent(event.originalEvent);\n                                if (form) {\n                                    return submitForm(form);\n                                }\n                            }\n                        }\n                        // Assumption that navigation event means to navigate...\n                        location.href = event.destination.url;\n                    }\n                    function submitAnchor(element) {\n                        const cloned = element.cloneNode();\n                        cloned.setAttribute(\"data-navigation-ignore\", \"1\");\n                        cloned.click();\n                    }\n                    function submitForm(element) {\n                        const cloned = element.cloneNode();\n                        cloned.setAttribute(\"data-navigation-ignore\", \"1\");\n                        cloned.submit();\n                    }\n                });\n                navigation.addEventListener(\"currententrychange\", ({ navigationType, from }) => {\n                    // console.log(\"<-- currententrychange event listener -->\");\n                    const { currentEntry } = navigation;\n                    if (!currentEntry)\n                        return;\n                    const { key, url } = currentEntry;\n                    if (ignoreCurrentEntryChange.delete(key) || !currentEntry?.sameDocument)\n                        return;\n                    const historyState = getNavigationEntryWithMeta(navigation, currentEntry, patchLimit);\n                    // console.log(\"currentEntry change\", historyState);\n                    switch (navigationType || \"replace\") {\n                        case \"push\":\n                            return pushState(historyState, \"\", url);\n                        case \"replace\":\n                            return replaceState(historyState, \"\", url);\n                        case \"traverse\":\n                            const delta = currentEntry.index - from.index;\n                            ignorePopState.add(key);\n                            return historyGo(delta);\n                        case \"reload\":\n                        // TODO\n                    }\n                });\n                window.addEventListener(\"popstate\", (event) => {\n                    // console.log(\"<-- popstate event listener -->\");\n                    const { state, originalState } = event;\n                    const foundState = originalState ?? state;\n                    if (!isStateHistoryWithMeta(foundState))\n                        return;\n                    const { [NavigationKey]: { key } } = foundState;\n                    if (ignorePopState.delete(key))\n                        return;\n                    ignoreCurrentEntryChange.add(key);\n                    let committed;\n                    try {\n                        committed = navigation.traverseTo(key).committed;\n                    }\n                    catch (error) {\n                        if (error instanceof InvalidStateError && !PERSIST_ENTRIES) {\n                            // ignore the error\n                            return;\n                        }\n                        throw error;\n                    }\n                    if (PERSIST_ENTRIES || PERSIST_ENTRIES_STATE) {\n                        committed\n                            .then(entry => {\n                            const historyState = getNavigationEntryWithMeta(navigation, entry, patchLimit);\n                            replaceState(historyState, \"\", entry.url);\n                        })\n                            // Noop catch\n                            .catch(() => { });\n                    }\n                });\n                // window.addEventListener(\"hashchange\", (ev) => {\n                //   // TODO\n                // })\n            }\n            if (INTERCEPT_EVENTS) {\n                interceptWindowClicks(navigation, window);\n            }\n            if (PATCH_HISTORY) {\n                patchGlobalScope(window, history, navigation);\n            }\n            if (!history.state) {\n                // Initialise history state if not available\n                const historyState = getNavigationEntryWithMeta(navigation, navigation.currentEntry, patchLimit);\n                replaceState(historyState, \"\", navigation.currentEntry.url);\n            }\n        }\n    };\n}\nfunction isAppNavigation(evt) {\n    return evt.button === 0 &&\n        !evt.defaultPrevented &&\n        !evt.metaKey &&\n        !evt.altKey &&\n        !evt.ctrlKey &&\n        !evt.shiftKey;\n}\n/** Checks if this element or any of its parents matches a given `selector` */\nfunction matchesAncestor(givenElement, selector) {\n    let element = getDefaultElement();\n    // console.log({ element })\n    while (element) {\n        if (element.matches(selector)) {\n            ok(element);\n            return element;\n        }\n        element = element.parentElement ?? element.getRootNode()?.host;\n    }\n    return undefined;\n    function getDefaultElement() {\n        if (!givenElement)\n            return undefined;\n        if (givenElement.matches instanceof Function)\n            return givenElement;\n        return givenElement.parentElement;\n    }\n}\n//# sourceMappingURL=get-polyfill.js.map","export let globalNavigation = undefined;\nif (typeof window !== \"undefined\" && window.navigation) {\n    const navigation = window.navigation;\n    assertNavigation(navigation);\n    globalNavigation = navigation;\n}\nfunction assertNavigation(value) {\n    if (!value) {\n        throw new Error(\"Expected Navigation\");\n    }\n}\n//# sourceMappingURL=global-navigation.js.map","import { DEFAULT_POLYFILL_OPTIONS, getCompletePolyfill } from \"./get-polyfill.js\";\nimport { getNavigation } from \"./get-navigation.js\";\nimport { globalNavigation } from \"./global-navigation.js\";\nexport function applyPolyfill(options = DEFAULT_POLYFILL_OPTIONS) {\n    const { apply, navigation } = getCompletePolyfill(options);\n    apply();\n    return navigation;\n}\nexport function shouldApplyPolyfill(navigation = getNavigation()) {\n    return (navigation !== globalNavigation &&\n        !globalNavigation &&\n        typeof window !== \"undefined\");\n}\n//# sourceMappingURL=apply-polyfill.js.map"],"file":"assets/index-fZHjfgTa.js"}