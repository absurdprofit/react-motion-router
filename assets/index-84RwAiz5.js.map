{"version":3,"file":"index-84RwAiz5.js","sources":["../../src/Components/Tile/index.tsx","../../src/Screens/Tiles/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Hero } from '../../assets/Heroes';\r\nimport { SharedElement } from '@react-motion-router/core';\r\nimport * as Stack from '@react-motion-router/stack';\r\nimport { getInset } from '../../common/utils';\r\nimport './index.css';\r\n\r\ninterface TileProps {\r\n    navigation: Stack.Navigation;\r\n    hero: Hero;\r\n    onClick?: () => void;\r\n}\r\n\r\nlet heroID = '';\r\nexport default function Tile({ hero, navigation, onClick }: TileProps) {\r\n    const [inset, setInset] = React.useState('');\r\n    const imageRef = React.useRef<HTMLImageElement | null>(null);\r\n\r\n    React.useEffect(() => {\r\n        navigation.transition?.finished.then(() => {\r\n            if (navigation.current.url?.pathname === '/tiles') {\r\n                setInset('');\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div onClick={() => {\r\n            const image = imageRef.current;\r\n            if (image) {\r\n                const imageRect = image.getBoundingClientRect();\r\n                setInset(\r\n                    getInset(-imageRect.top, -imageRect.right, -imageRect.bottom, -imageRect.left)\r\n                );\r\n            }\r\n            heroID = hero.id;\r\n            if (onClick) {\r\n                onClick();\r\n            }\r\n        }} className=\"tile\">\r\n            <SharedElement id={hero.id} config={{\r\n                duration: 200\r\n            }}>\r\n                <img\r\n                    ref={imageRef}\r\n                    src={hero.photoUrl}\r\n                    alt={hero.name}\r\n                    width={hero.photoWidth}\r\n                    height={hero.photoHeight}\r\n                    decoding=\"async\"\r\n                    style={{\r\n                        clipPath: (heroID === hero.id ? inset : '')\r\n                    }}\r\n                />\r\n            </SharedElement>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Heroes, Hero } from '../../assets/Heroes';\r\nimport { Anchor, ScreenComponentProps } from '@react-motion-router/stack';\r\nimport Tile from '../../Components/Tile';\r\nimport './index.css';\r\n\r\ninterface TilesProps extends ScreenComponentProps { }\r\n\r\ninterface TilesState {\r\n    heroes: Hero[];\r\n}\r\n\r\n\r\nexport default class Tiles extends React.Component<TilesProps, TilesState> {\r\n    static isFirstLoad = false;\r\n    state: TilesState = {\r\n        heroes: Heroes\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.navigation.preloadRoute('slides');\r\n        this.props.navigation.transition?.finished.then(() => {\r\n            if (!Tiles.isFirstLoad) {\r\n                Tiles.isFirstLoad = true;\r\n                this.forceUpdate();\r\n            }\r\n        });\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return (\r\n            <div className={`tiles ${Tiles.isFirstLoad ? 'loaded' : 'suspense'}`}>\r\n                <div className=\"content\">\r\n                    {this.state.heroes.map((hero: Hero, index: number) => {\r\n                        return (\r\n                            <Anchor key={index} href=\"slides\" query={{\r\n                                hero: index\r\n                            }}>\r\n                                <Tile navigation={this.props.navigation} hero={hero} />\r\n                            </Anchor>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"],"names":["heroID","Tile","hero","navigation","onClick","inset","setInset","React","imageRef","jsx","image","imageRect","getInset","SharedElement","Tiles","Heroes","index","Anchor"],"mappings":";wIAaA,IAAIA,EAAS,GACb,SAAwBC,EAAK,CAAE,KAAAC,EAAM,WAAAC,EAAY,QAAAC,GAAsB,CACnE,KAAM,CAACC,EAAOC,CAAQ,EAAIC,EAAM,SAAS,EAAE,EACrCC,EAAWD,EAAM,OAAgC,IAAI,EAE3D,OAAAA,EAAM,UAAU,IAAM,CACPJ,EAAA,YAAY,SAAS,KAAK,IAAM,CACnCA,EAAW,QAAQ,KAAK,WAAa,UACrCG,EAAS,EAAE,CACf,CACH,CACL,EAAG,CAAE,CAAA,EAGDG,MAAC,MAAI,CAAA,QAAS,IAAM,CAChB,MAAMC,EAAQF,EAAS,QACvB,GAAIE,EAAO,CACD,MAAAC,EAAYD,EAAM,wBACxBJ,EACIM,EAAS,CAACD,EAAU,IAAK,CAACA,EAAU,MAAO,CAACA,EAAU,OAAQ,CAACA,EAAU,IAAI,CAAA,CAErF,CACAX,EAASE,EAAK,GACVE,GACQA,GACZ,EACD,UAAU,OACT,SAAAK,EAAA,IAACI,GAAc,GAAIX,EAAK,GAAI,OAAQ,CAChC,SAAU,GAEV,EAAA,SAAAO,EAAA,IAAC,MAAA,CACG,IAAKD,EACL,IAAKN,EAAK,SACV,IAAKA,EAAK,KACV,MAAOA,EAAK,WACZ,OAAQA,EAAK,YACb,SAAS,QACT,MAAO,CACH,SAAWF,IAAWE,EAAK,GAAKG,EAAQ,EAC5C,CAAA,CAAA,CAER,CAAA,CACJ,CAAA,CAER,CC5CqB,MAAAS,UAAcP,EAAM,SAAkC,CACvE,OAAO,YAAc,GACrB,MAAoB,CAChB,OAAQQ,CAAA,EAGZ,mBAAoB,CACX,KAAA,MAAM,WAAW,aAAa,QAAQ,EAC3C,KAAK,MAAM,WAAW,YAAY,SAAS,KAAK,IAAM,CAC7CD,EAAM,cACPA,EAAM,YAAc,GACpB,KAAK,YAAY,EACrB,CACH,CACL,CAEA,QAA0B,CACtB,aACK,MAAI,CAAA,UAAW,SAASA,EAAM,YAAc,SAAW,UAAU,GAC9D,eAAC,MAAI,CAAA,UAAU,UACV,SAAK,KAAA,MAAM,OAAO,IAAI,CAACZ,EAAYc,IAE3BP,EAAA,IAAAQ,EAAA,CAAmB,KAAK,SAAS,MAAO,CACrC,KAAMD,CACV,EACI,eAACf,EAAK,CAAA,WAAY,KAAK,MAAM,WAAY,KAAAC,CAAY,CAAA,CAAA,EAH5Cc,CAIb,CAEP,EACL,CACJ,CAAA,CAER,CACJ"}